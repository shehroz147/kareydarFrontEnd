{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Color from \"color\";\nimport patternReg from \"./patternReg\";\nexport default function (colorOrBrush) {\n  if (colorOrBrush === \"none\" || !colorOrBrush) {\n    return null;\n  }\n\n  if (colorOrBrush === \"currentColor\") {\n    return [2];\n  }\n\n  try {\n    var matched = colorOrBrush.match(patternReg);\n\n    if (matched) {\n      return [1, matched[1]];\n    } else {\n      var _Color$rgb$array = Color(colorOrBrush).rgb().array(),\n          _Color$rgb$array2 = _slicedToArray(_Color$rgb$array, 4),\n          r = _Color$rgb$array2[0],\n          g = _Color$rgb$array2[1],\n          b = _Color$rgb$array2[2],\n          _Color$rgb$array2$ = _Color$rgb$array2[3],\n          a = _Color$rgb$array2$ === void 0 ? 1 : _Color$rgb$array2$;\n\n      return [0, r / 255, g / 255, b / 255, a];\n    }\n  } catch (err) {\n    console.warn(\"\\\"\" + colorOrBrush + \"\\\" is not a valid color or brush\");\n    return null;\n  }\n}","map":{"version":3,"names":["Color","patternReg","colorOrBrush","matched","match","rgb","array","r","g","b","a","err","console","warn"],"sources":["C:/Users/hahah/Desktop/att/attornea-lawyer/node_modules/react-native-svg/lib/extract/extractBrush.js"],"sourcesContent":["import Color from \"color\";\nimport patternReg from \"./patternReg\";\n\nexport default function(colorOrBrush) {\n    if (colorOrBrush === \"none\" || !colorOrBrush) {\n        return null;\n    }\n\n    if (colorOrBrush === \"currentColor\") {\n        return [2];\n    }\n    try {\n        const matched = colorOrBrush.match(patternReg);\n        // brush\n        if (matched) {\n            return [1, matched[1]];\n            //todo:\n        } else {\n            // solid color\n            const [r, g, b, a = 1] = Color(colorOrBrush)\n                .rgb()\n                .array();\n            return [0, r / 255, g / 255, b / 255, a];\n        }\n    } catch (err) {\n        console.warn(`\"${colorOrBrush}\" is not a valid color or brush`);\n        return null;\n    }\n}\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP;AAEA,eAAe,UAASC,YAAT,EAAuB;EAClC,IAAIA,YAAY,KAAK,MAAjB,IAA2B,CAACA,YAAhC,EAA8C;IAC1C,OAAO,IAAP;EACH;;EAED,IAAIA,YAAY,KAAK,cAArB,EAAqC;IACjC,OAAO,CAAC,CAAD,CAAP;EACH;;EACD,IAAI;IACA,IAAMC,OAAO,GAAGD,YAAY,CAACE,KAAb,CAAmBH,UAAnB,CAAhB;;IAEA,IAAIE,OAAJ,EAAa;MACT,OAAO,CAAC,CAAD,EAAIA,OAAO,CAAC,CAAD,CAAX,CAAP;IAEH,CAHD,MAGO;MAEH,uBAAyBH,KAAK,CAACE,YAAD,CAAL,CACpBG,GADoB,GAEpBC,KAFoB,EAAzB;MAAA;MAAA,IAAOC,CAAP;MAAA,IAAUC,CAAV;MAAA,IAAaC,CAAb;MAAA;MAAA,IAAgBC,CAAhB,mCAAoB,CAApB;;MAGA,OAAO,CAAC,CAAD,EAAIH,CAAC,GAAG,GAAR,EAAaC,CAAC,GAAG,GAAjB,EAAsBC,CAAC,GAAG,GAA1B,EAA+BC,CAA/B,CAAP;IACH;EACJ,CAbD,CAaE,OAAOC,GAAP,EAAY;IACVC,OAAO,CAACC,IAAR,QAAiBX,YAAjB;IACA,OAAO,IAAP;EACH;AACJ"},"metadata":{},"sourceType":"module"}