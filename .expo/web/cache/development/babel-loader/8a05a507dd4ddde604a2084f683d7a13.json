{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport { fontPixel, heightPixel, widthPixel } from \"../../lib/style/adjust\";\nimport { useStyles } from \"../../lib/style/useStyle\";\nimport { useSafeAreaInsets } from \"react-native-safe-area-context\";\nimport PixelImage from \"../../Components/common/PixelImage\";\nimport FocusAwareStatusBar from \"../../Components/common/FocusAwareStatusBar\";\nimport auth from \"../../lib/api/auth\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport { Button, Divider } from \"react-native-paper\";\nimport SelectDropdown from \"react-native-select-dropdown\";\nimport { xorBy } from \"lodash\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar AddCitation = function AddCitation(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      title = _useState2[0],\n      setTitle = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      clcName = _useState4[0],\n      setClcName = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      courtName = _useState6[0],\n      setCourtName = _useState6[1];\n\n  var _useState7 = useState(),\n      _useState8 = _slicedToArray(_useState7, 2),\n      code = _useState8[0],\n      setCode = _useState8[1];\n\n  var _useState9 = useState(),\n      _useState10 = _slicedToArray(_useState9, 2),\n      tags = _useState10[0],\n      setTags = _useState10[1];\n\n  var _useState11 = useState(),\n      _useState12 = _slicedToArray(_useState11, 2),\n      headNotes = _useState12[0],\n      setHeadNotes = _useState12[1];\n\n  var _useState13 = useState(),\n      _useState14 = _slicedToArray(_useState13, 2),\n      caseDescription = _useState14[0],\n      setCaseDescription = _useState14[1];\n\n  var _useState15 = useState(),\n      _useState16 = _slicedToArray(_useState15, 2),\n      year = _useState16[0],\n      setYear = _useState16[1];\n\n  var options = [{\n    cat: \"Group 1\",\n    key: \"Option 1\"\n  }, {\n    cat: \"Group 1\",\n    key: \"Option 2\"\n  }, {\n    cat: \"Group 1\",\n    key: \"Option 3\"\n  }, {\n    cat: \"Group 2\",\n    key: \"Option 4\"\n  }, {\n    cat: \"Group 2\",\n    key: \"Option 5\"\n  }, {\n    cat: \"Group 2\",\n    key: \"Option 6\"\n  }, {\n    cat: \"Group 2\",\n    key: \"Option 7\"\n  }];\n\n  var showvalue = function showvalue() {\n    console.log(\"Tags : \", tags);\n  };\n\n  var addCitation = function _callee() {\n    var data, response;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            data = {\n              title: title,\n              clcName: clcName,\n              courtName: courtName,\n              code: code,\n              tags: tags,\n              headNotes: headNotes,\n              caseDescription: caseDescription,\n              year: year\n            };\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(auth.post(\"lawyer/citationSearch\", data));\n\n          case 3:\n            response = _context.sent;\n            console.log(response);\n            alert(\"Citation added Successfully\");\n            window.location.reload();\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var handleChanges = function handleChanges(val) {\n    console.log(\"Value is : \", val);\n    setTags(val);\n  };\n\n  var commonStyle = useStyles();\n  var insets = useSafeAreaInsets();\n\n  var _useState17 = useState([]),\n      _useState18 = _slicedToArray(_useState17, 2),\n      userData = _useState18[0],\n      setUserData = _useState18[1];\n\n  var getUserData = function _callee2() {\n    var _id, id, data, response;\n\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"userId\"));\n\n          case 2:\n            _id = _context2.sent;\n            id = JSON.parse(_id);\n            data = {\n              id: id\n            };\n            console.log(data);\n            _context2.next = 8;\n            return _regeneratorRuntime.awrap(auth.post(\"user/userData\", data));\n\n          case 8:\n            response = _context2.sent;\n            console.log(response.data);\n            setUserData(response.data);\n\n          case 11:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    getUserData();\n  }, []);\n  var profileData = [{\n    id: 1,\n    title: \"Introduction/Bio\"\n  }, {\n    id: 2,\n    title: \"Practice Area\"\n  }, {\n    id: 3,\n    title: \"Education\"\n  }, {\n    id: 4,\n    title: \"WorkExperience\"\n  }];\n\n  var _useForm = useForm({\n    defaultValues: {\n      name: \"\",\n      email: \"\",\n      gender: \"\",\n      licenseNoOfLawayer: \"\",\n      bio: \"\",\n      eduSchool: \"\",\n      eduQualification: \"\",\n      eduYear: \"\",\n      expTitle: \"\",\n      expInstituteName: \"\",\n      expInstituteLocation: \"\",\n      expStartMonth: \"\",\n      expStartYear: \"\",\n      expEndMonth: \"\",\n      expEndYear: \"\",\n      practiceArea: \"\",\n      areaSpecialization: \"\",\n      consultaionFees: \"\"\n    }\n  }),\n      control = _useForm.control,\n      handleSubmit = _useForm.handleSubmit;\n\n  var _useState19 = useState([{\n    key: \"\",\n    value: \"\"\n  }]),\n      _useState20 = _slicedToArray(_useState19, 2),\n      inputs = _useState20[0],\n      setInputs = _useState20[1];\n\n  var _useState21 = useState([{\n    key: \"\",\n    value: \"\"\n  }]),\n      _useState22 = _slicedToArray(_useState21, 2),\n      inputs1 = _useState22[0],\n      setInputs1 = _useState22[1];\n\n  var addHandler = function addHandler() {\n    var _inputs = _toConsumableArray(inputs);\n\n    _inputs.push({\n      key: \"\",\n      value: \"\"\n    });\n\n    setInputs(_inputs);\n  };\n\n  var addHandler1 = function addHandler1() {\n    var _inputs1 = _toConsumableArray(inputs1);\n\n    _inputs1.push({\n      key: \"\",\n      value: \"\"\n    });\n\n    setInputs1(_inputs1);\n  };\n\n  var deleteHandler = function deleteHandler(key) {\n    var _inputs = inputs.filter(function (inputs, index) {\n      return index != key;\n    });\n\n    setInputs(_inputs);\n  };\n\n  var deleteHandler1 = function deleteHandler1(key) {\n    var _inputs1 = inputs1.filter(function (inputs1, index) {\n      return index != key;\n    });\n\n    setInputs1(_inputs1);\n  };\n\n  var inputHandler = function inputHandler(text, key) {\n    var _inputs = _toConsumableArray(inputs);\n\n    _inputs[key].value = text;\n    _inputs[key].key = key;\n    setInputs(_inputs);\n  };\n\n  var inputHandler1 = function inputHandler1(text, key) {\n    var _inputs1 = _toConsumableArray(inputs1);\n\n    _inputs1[key].value = text;\n    _inputs1[key].key = key;\n    setInputs1(_inputs1);\n  };\n\n  return _jsxs(ScrollView, {\n    showsVerticalScrollIndicator: false,\n    style: {\n      paddingTop: 0,\n      paddingBottom: insets.bottom,\n      flex: 1,\n      backgroundColor: \"#FFFFFF\"\n    },\n    children: [_jsx(FocusAwareStatusBar, {\n      translucent: true,\n      backgroundColor: \"transparent\",\n      barStyle: \"light-content\"\n    }), _jsxs(View, {\n      style: {\n        width: \"90%\",\n        alignSelf: \"center\",\n        height: \"80%\",\n        marginBottom: 50,\n        left: -10\n      },\n      children: [_jsxs(View, {\n        children: [_jsx(Text, {\n          style: {\n            alignSelf: \"center\",\n            marginTop: 30,\n            color: \"black\",\n            fontSize: 16\n          },\n          children: \"Add Citation\"\n        }), _jsx(Text, {\n          style: {\n            marginTop: 30,\n            color: \"black\",\n            fontSize: 16\n          },\n          children: \"Citation Name\"\n        }), _jsx(Controller, {\n          control: control,\n          rules: {\n            required: \"Full Name can not be blank\"\n          },\n          render: function render(_ref2) {\n            var _ref2$field = _ref2.field,\n                onChange = _ref2$field.onChange,\n                onBlur = _ref2$field.onBlur,\n                value = _ref2$field.value;\n            return _jsx(SelectDropdown, {\n              onSelect: function onSelect(selectedItem, index) {\n                setClcName(selectedItem);\n              },\n              buttonStyle: {\n                margin: 10,\n                width: \"100%\"\n              },\n              defaultButtonText: _jsx(Text, {\n                style: {\n                  fontSize: 12,\n                  textAlign: \"left\",\n                  color: \"grey\"\n                },\n                children: \"CLC\"\n              }),\n              buttonTextAfterSelection: function buttonTextAfterSelection(selectedItem, index) {\n                return selectedItem;\n              },\n              rowTextForSelection: function rowTextForSelection(item, index) {\n                return item;\n              }\n            });\n          },\n          name: \"citationname\"\n        }), _jsx(Controller, {\n          control: control,\n          rules: {\n            required: \"Full Name can not be blank\"\n          },\n          render: function render(_ref3) {\n            var _ref3$field = _ref3.field,\n                onChange = _ref3$field.onChange,\n                onBlur = _ref3$field.onBlur,\n                value = _ref3$field.value;\n            return _jsx(TextInput, {\n              style: commonStyle.input,\n              placeholderTextColor: \"#AAAAAA\",\n              autoCapitalize: \"none\",\n              autoCorrect: false,\n              onBlur: onBlur,\n              onChangeText: setYear,\n              returnKeyType: \"next\",\n              placeholder: \"2022\",\n              value: year\n            });\n          },\n          name: \"year\"\n        }), _jsx(Controller, {\n          control: control,\n          rules: {\n            required: \"Full Name can not be blank\"\n          },\n          render: function render(_ref4) {\n            var _ref4$field = _ref4.field,\n                onChange = _ref4$field.onChange,\n                onBlur = _ref4$field.onBlur,\n                value = _ref4$field.value;\n            return _jsx(TextInput, {\n              style: commonStyle.input,\n              placeholderTextColor: \"#AAAAAA\",\n              autoCapitalize: \"none\",\n              autoCorrect: false,\n              onBlur: onBlur,\n              onChangeText: setCourtName,\n              returnKeyType: \"next\",\n              placeholder: \"Enter Court Name\",\n              value: courtName\n            });\n          },\n          name: \"courtname\"\n        }), _jsx(Controller, {\n          control: control,\n          rules: {\n            required: \"Full Name can not be blank\"\n          },\n          render: function render(_ref5) {\n            var _ref5$field = _ref5.field,\n                onChange = _ref5$field.onChange,\n                onBlur = _ref5$field.onBlur,\n                value = _ref5$field.value;\n            return _jsx(TextInput, {\n              style: commonStyle.input,\n              placeholderTextColor: \"#AAAAAA\",\n              autoCapitalize: \"none\",\n              autoCorrect: false,\n              onBlur: onBlur,\n              onChangeText: setCode,\n              returnKeyType: \"next\",\n              placeholder: \"Enter Code or Page No\",\n              value: code\n            });\n          },\n          name: \"code\"\n        })]\n      }), _jsxs(View, {\n        children: [_jsx(Text, {\n          style: {\n            marginTop: 30,\n            color: \"black\",\n            fontSize: 16\n          },\n          children: \"Citation Title\"\n        }), _jsx(Controller, {\n          control: control,\n          rules: {\n            required: \"Full Name can not be blank\"\n          },\n          render: function render(_ref6) {\n            var _ref6$field = _ref6.field,\n                onChange = _ref6$field.onChange,\n                onBlur = _ref6$field.onBlur,\n                value = _ref6$field.value;\n            return _jsx(TextInput, {\n              style: commonStyle.input,\n              placeholderTextColor: \"#AAAAAA\",\n              autoCapitalize: \"none\",\n              autoCorrect: false,\n              onBlur: onBlur,\n              onChangeText: setTitle,\n              returnKeyType: \"next\",\n              placeholder: \"Add Citation Title\",\n              value: title\n            });\n          },\n          name: \"title\"\n        })]\n      }), _jsx(View, {\n        children: _jsx(Text, {\n          style: {\n            marginTop: 30,\n            color: \"black\",\n            fontSize: 16\n          },\n          children: \"Tags\"\n        })\n      }), _jsxs(View, {\n        children: [_jsx(Text, {\n          style: {\n            marginTop: 30,\n            color: \"black\",\n            fontSize: 16\n          },\n          children: \"Head Notes\"\n        }), _jsx(Controller, {\n          control: control,\n          rules: {\n            required: \"Full Name can not be blank\"\n          },\n          render: function render(_ref7) {\n            var _ref7$field = _ref7.field,\n                onChange = _ref7$field.onChange,\n                onBlur = _ref7$field.onBlur,\n                value = _ref7$field.value;\n            return _jsx(TextInput, {\n              style: commonStyle.input,\n              multiline: true,\n              numberOfLines: 4,\n              placeholder: \"Head Notes\",\n              onChange: setHeadNotes,\n              value: headNotes\n            });\n          },\n          name: \"headnotes\"\n        })]\n      }), _jsxs(View, {\n        children: [_jsx(Text, {\n          style: {\n            marginTop: 30,\n            color: \"black\",\n            fontSize: 16\n          },\n          children: \"Case Description\"\n        }), _jsx(Controller, {\n          control: control,\n          rules: {\n            required: \"Full Name can not be blank\"\n          },\n          render: function render(_ref8) {\n            var _ref8$field = _ref8.field,\n                onChange = _ref8$field.onChange,\n                onBlur = _ref8$field.onBlur,\n                value = _ref8$field.value;\n            return _jsx(TextInput, {\n              style: commonStyle.input,\n              multiline: true,\n              numberOfLines: 4,\n              placeholder: \"Add Case Description\",\n              onChange: setCaseDescription,\n              value: caseDescription\n            });\n          },\n          name: \"casedesc\"\n        })]\n      }), _jsx(Button, {\n        style: {\n          width: \"70%\",\n          marginTop: 20,\n          padding: 5,\n          alignSelf: \"center\",\n          left: 10\n        },\n        mode: \"contained\",\n        onPress: addCitation,\n        color: \"#244e78\",\n        children: \"Save Changes\"\n      })]\n    })]\n  });\n};\n\nexport default AddCitation;","map":{"version":3,"names":["React","useEffect","useState","LinearGradient","fontPixel","heightPixel","widthPixel","useStyles","useSafeAreaInsets","PixelImage","FocusAwareStatusBar","auth","AsyncStorage","useForm","Controller","Button","Divider","SelectDropdown","xorBy","AddCitation","navigation","title","setTitle","clcName","setClcName","courtName","setCourtName","code","setCode","tags","setTags","headNotes","setHeadNotes","caseDescription","setCaseDescription","year","setYear","options","cat","key","showvalue","console","log","addCitation","data","post","response","alert","window","location","reload","handleChanges","val","commonStyle","insets","userData","setUserData","getUserData","getItem","_id","id","JSON","parse","profileData","defaultValues","name","email","gender","licenseNoOfLawayer","bio","eduSchool","eduQualification","eduYear","expTitle","expInstituteName","expInstituteLocation","expStartMonth","expStartYear","expEndMonth","expEndYear","practiceArea","areaSpecialization","consultaionFees","control","handleSubmit","value","inputs","setInputs","inputs1","setInputs1","addHandler","_inputs","push","addHandler1","_inputs1","deleteHandler","filter","index","deleteHandler1","inputHandler","text","inputHandler1","paddingTop","paddingBottom","bottom","flex","backgroundColor","width","alignSelf","height","marginBottom","left","marginTop","color","fontSize","required","field","onChange","onBlur","selectedItem","margin","textAlign","item","input","padding"],"sources":["C:/Users/hahah/Desktop/att/attornea-lawyer/src/Screens/Citation/AddCitation.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n    View,\r\n    Text,\r\n    Pressable,\r\n    Image,\r\n    Platform,\r\n    ScrollView,\r\n    TextInput,\r\n} from \"react-native\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport { fontPixel, heightPixel, widthPixel } from \"../../lib/style/adjust\";\r\nimport { useStyles } from \"../../lib/style/useStyle\";\r\nimport { useSafeAreaInsets } from \"react-native-safe-area-context\";\r\nimport PixelImage from \"../../Components/common/PixelImage\";\r\nimport FocusAwareStatusBar from \"../../Components/common/FocusAwareStatusBar\";\r\nimport auth from \"../../lib/api/auth\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { Button, Divider } from \"react-native-paper\";\r\nimport SelectDropdown from \"react-native-select-dropdown\";\r\n\r\n// import SelectBox from \"react-native-multi-selectbox\";\r\nimport { xorBy } from \"lodash\";\r\n\r\nconst AddCitation = ({ navigation }) => {\r\n\r\n    const [title, setTitle] = useState();\r\n    const [clcName, setClcName] = useState();\r\n    const [courtName, setCourtName] = useState();\r\n    const [code, setCode] = useState();\r\n    const [tags, setTags] = useState();\r\n    const [headNotes, setHeadNotes] = useState();\r\n    const [caseDescription, setCaseDescription] = useState();\r\n    const [year, setYear] = useState();\r\n\r\n    const options = [\r\n        {\r\n            cat: \"Group 1\",\r\n            key: \"Option 1\",\r\n        },\r\n        {\r\n            cat: \"Group 1\",\r\n            key: \"Option 2\",\r\n        },\r\n        {\r\n            cat: \"Group 1\",\r\n            key: \"Option 3\",\r\n        },\r\n        {\r\n            cat: \"Group 2\",\r\n            key: \"Option 4\",\r\n        },\r\n        {\r\n            cat: \"Group 2\",\r\n            key: \"Option 5\",\r\n        },\r\n        {\r\n            cat: \"Group 2\",\r\n            key: \"Option 6\",\r\n        },\r\n        {\r\n            cat: \"Group 2\",\r\n            key: \"Option 7\",\r\n        },\r\n    ];\r\n    const showvalue = () => {\r\n        console.log(\"Tags : \", tags);\r\n    }\r\n    const addCitation = async () => {\r\n        const data = {\r\n            title: title,\r\n            clcName: clcName,\r\n            courtName: courtName,\r\n            code: code,\r\n            tags: tags,\r\n            headNotes: headNotes,\r\n            caseDescription: caseDescription,\r\n            year: year,\r\n        };\r\n        const response = await auth.post(\"lawyer/citationSearch\", data);\r\n        console.log(response);\r\n        alert(\"Citation added Successfully\");\r\n        window.location.reload();\r\n\r\n    };\r\n    const handleChanges = (val) => {\r\n        console.log(\"Value is : \", val)\r\n        setTags(val)\r\n    };\r\n    \r\n\r\n\r\n    const commonStyle = useStyles();\r\n    const insets = useSafeAreaInsets();\r\n    const [userData, setUserData] = useState([]);\r\n\r\n    const getUserData = async () => {\r\n        let _id = await AsyncStorage.getItem(\"userId\");\r\n        let id = JSON.parse(_id);\r\n        const data = {\r\n            id: id,\r\n        };\r\n        console.log(data);\r\n        const response = await auth.post(\"user/userData\", data);\r\n        console.log(response.data);\r\n        setUserData(response.data);\r\n    };\r\n\r\n    useEffect(() => {\r\n        getUserData();\r\n    }, []);\r\n\r\n    const profileData = [\r\n        {\r\n            id: 1,\r\n            title: \"Introduction/Bio\",\r\n        },\r\n        {\r\n            id: 2,\r\n            title: \"Practice Area\",\r\n        },\r\n        {\r\n            id: 3,\r\n            title: \"Education\",\r\n        },\r\n        {\r\n            id: 4,\r\n            title: \"WorkExperience\",\r\n        },\r\n    ];\r\n\r\n    const { control, handleSubmit } = useForm({\r\n        defaultValues: {\r\n            name: \"\",\r\n            email: \"\",\r\n            gender: \"\",\r\n            licenseNoOfLawayer: \"\",\r\n            bio: \"\",\r\n            eduSchool: \"\",\r\n            eduQualification: \"\",\r\n            eduYear: \"\",\r\n            expTitle: \"\",\r\n            expInstituteName: \"\",\r\n            expInstituteLocation: \"\",\r\n            expStartMonth: \"\",\r\n            expStartYear: \"\",\r\n            expEndMonth: \"\",\r\n            expEndYear: \"\",\r\n            practiceArea: \"\",\r\n            areaSpecialization: \"\",\r\n            consultaionFees: \"\",\r\n        },\r\n        // mode: 'onBlur',\r\n    });\r\n\r\n    const [inputs, setInputs] = useState([{ key: \"\", value: \"\" }]);\r\n    const [inputs1, setInputs1] = useState([{ key: \"\", value: \"\" }]);\r\n\r\n    const addHandler = () => {\r\n        const _inputs = [...inputs];\r\n        _inputs.push({ key: \"\", value: \"\" });\r\n        setInputs(_inputs);\r\n    };\r\n\r\n    const addHandler1 = () => {\r\n        const _inputs1 = [...inputs1];\r\n        _inputs1.push({ key: \"\", value: \"\" });\r\n        setInputs1(_inputs1);\r\n    };\r\n\r\n    const deleteHandler = (key) => {\r\n        const _inputs = inputs.filter((inputs, index) => index != key);\r\n        setInputs(_inputs);\r\n    };\r\n    const deleteHandler1 = (key) => {\r\n        const _inputs1 = inputs1.filter((inputs1, index) => index != key);\r\n        setInputs1(_inputs1);\r\n    };\r\n\r\n    const inputHandler = (text, key) => {\r\n        const _inputs = [...inputs];\r\n        _inputs[key].value = text;\r\n        _inputs[key].key = key;\r\n        setInputs(_inputs);\r\n    };\r\n\r\n    const inputHandler1 = (text, key) => {\r\n        const _inputs1 = [...inputs1];\r\n        _inputs1[key].value = text;\r\n        _inputs1[key].key = key;\r\n        setInputs1(_inputs1);\r\n    };\r\n\r\n    return (\r\n        <ScrollView\r\n            showsVerticalScrollIndicator={false}\r\n            style={{\r\n                paddingTop: 0,\r\n                paddingBottom: insets.bottom,\r\n                flex: 1,\r\n                backgroundColor: \"#FFFFFF\",\r\n            }}\r\n        >\r\n            <FocusAwareStatusBar\r\n                translucent\r\n                backgroundColor=\"transparent\"\r\n                barStyle=\"light-content\"\r\n            />\r\n            <View\r\n                style={{\r\n                    width: \"90%\",\r\n                    alignSelf: \"center\",\r\n                    height: \"80%\",\r\n                    marginBottom: 50,\r\n                    left: -10,\r\n                }}\r\n            >\r\n                <View>\r\n                    <Text\r\n                        style={{\r\n                            alignSelf: \"center\",\r\n                            marginTop: 30,\r\n                            color: \"black\",\r\n                            fontSize: 16,\r\n                        }}\r\n                    >\r\n                        Add Citation\r\n                    </Text>\r\n                    <Text\r\n                        style={{\r\n                            // alignSelf: \"Left\",\r\n                            marginTop: 30,\r\n                            color: \"black\",\r\n                            fontSize: 16,\r\n                        }}\r\n                    >\r\n                        Citation Name\r\n                    </Text>\r\n                    <Controller\r\n                        control={control}\r\n                        rules={{ required: \"Full Name can not be blank\" }}\r\n                        render={({ field: { onChange, onBlur, value } }) => (\r\n                            <SelectDropdown\r\n                                // data={countries}\r\n                                onSelect={(selectedItem, index) => {\r\n                                    setClcName(selectedItem);\r\n                                }}\r\n                                buttonStyle={{\r\n                                    margin: 10,\r\n                                    width: \"100%\",\r\n                                }}\r\n                                defaultButtonText={\r\n                                    <Text\r\n                                        style={{ fontSize: 12, textAlign: \"left\", color: \"grey\" }}\r\n                                    >\r\n                                        CLC\r\n                                    </Text>\r\n                                }\r\n                                buttonTextAfterSelection={(selectedItem, index) => {\r\n                                    return selectedItem;\r\n                                }}\r\n                                rowTextForSelection={(item, index) => {\r\n                                    return item;\r\n                                }}\r\n                            />\r\n                        )}\r\n                        name=\"citationname\"\r\n                    />\r\n                    <Controller\r\n                        control={control}\r\n                        rules={{ required: \"Full Name can not be blank\" }}\r\n                        render={({ field: { onChange, onBlur, value } }) => (\r\n                            <TextInput\r\n                                style={commonStyle.input}\r\n                                placeholderTextColor={\"#AAAAAA\"}\r\n                                autoCapitalize=\"none\"\r\n                                autoCorrect={false}\r\n                                onBlur={onBlur}\r\n                                onChangeText={setYear}\r\n                                returnKeyType=\"next\"\r\n                                placeholder=\"2022\"\r\n                                value={year}\r\n                            />\r\n                        )}\r\n                        name=\"year\"\r\n                    />\r\n                    <Controller\r\n                        control={control}\r\n                        rules={{ required: \"Full Name can not be blank\" }}\r\n                        render={({ field: { onChange, onBlur, value } }) => (\r\n                            <TextInput\r\n                                style={commonStyle.input}\r\n                                placeholderTextColor={\"#AAAAAA\"}\r\n                                autoCapitalize=\"none\"\r\n                                autoCorrect={false}\r\n                                onBlur={onBlur}\r\n                                onChangeText={setCourtName}\r\n                                returnKeyType=\"next\"\r\n                                placeholder=\"Enter Court Name\"\r\n                                value={courtName}\r\n                            />\r\n                        )}\r\n                        name=\"courtname\"\r\n                    />\r\n                    <Controller\r\n                        control={control}\r\n                        rules={{ required: \"Full Name can not be blank\" }}\r\n                        render={({ field: { onChange, onBlur, value } }) => (\r\n                            <TextInput\r\n                                style={commonStyle.input}\r\n                                placeholderTextColor={\"#AAAAAA\"}\r\n                                autoCapitalize=\"none\"\r\n                                autoCorrect={false}\r\n                                onBlur={onBlur}\r\n                                onChangeText={setCode}\r\n                                returnKeyType=\"next\"\r\n                                placeholder=\"Enter Code or Page No\"\r\n                                value={code}\r\n                            />\r\n                        )}\r\n                        name=\"code\"\r\n                    />\r\n\r\n                </View>\r\n\r\n                <View>\r\n                    <Text\r\n                        style={{\r\n                            // alignSelf: \"Left\",\r\n                            marginTop: 30,\r\n                            color: \"black\",\r\n                            fontSize: 16,\r\n                        }}\r\n                    >\r\n                        Citation Title\r\n                    </Text>\r\n                    <Controller\r\n                        control={control}\r\n                        rules={{ required: \"Full Name can not be blank\" }}\r\n                        render={({ field: { onChange, onBlur, value } }) => (\r\n                            <TextInput\r\n                                style={commonStyle.input}\r\n                                placeholderTextColor={\"#AAAAAA\"}\r\n                                autoCapitalize=\"none\"\r\n                                autoCorrect={false}\r\n                                onBlur={onBlur}\r\n                                onChangeText={setTitle}\r\n                                returnKeyType=\"next\"\r\n                                placeholder=\"Add Citation Title\"\r\n                                value={title}\r\n                            />\r\n                        )}\r\n                        name=\"title\"\r\n                    />\r\n                </View>\r\n                <View>\r\n                    <Text\r\n                        style={{\r\n                            // alignSelf: \"Left\",\r\n                            marginTop: 30,\r\n                            color: \"black\",\r\n                            fontSize: 16,\r\n                        }}\r\n                    >\r\n                        Tags\r\n                    </Text>\r\n\r\n\r\n                </View>\r\n                <View>\r\n                    <Text\r\n                        style={{\r\n                            // alignSelf: \"Left\",\r\n                            marginTop: 30,\r\n                            color: \"black\",\r\n                            fontSize: 16,\r\n                        }}\r\n                    >\r\n                        Head Notes\r\n                    </Text>\r\n                    <Controller\r\n                        control={control}\r\n                        rules={{ required: \"Full Name can not be blank\" }}\r\n                        render={({ field: { onChange, onBlur, value } }) => (\r\n                            <TextInput\r\n                                style={commonStyle.input}\r\n                                multiline={true}\r\n                                numberOfLines={4}\r\n                                placeholder=\"Head Notes\"\r\n                                onChange={setHeadNotes}\r\n                            value={headNotes}\r\n\r\n                            />\r\n                        )}\r\n                        name=\"headnotes\"\r\n                    />\r\n                </View><View>\r\n                    <Text\r\n                        style={{\r\n                            // alignSelf: \"Left\",\r\n                            marginTop: 30,\r\n                            color: \"black\",\r\n                            fontSize: 16,\r\n                        }}\r\n                    >\r\n                        Case Description\r\n\r\n                    </Text>\r\n                    <Controller\r\n                        control={control}\r\n                        rules={{ required: \"Full Name can not be blank\" }}\r\n                        render={({ field: { onChange, onBlur, value } }) => (\r\n                            <TextInput\r\n                                style={commonStyle.input}\r\n                                multiline={true}\r\n                                numberOfLines={4}\r\n                                placeholder=\"Add Case Description\"\r\n              onChange={setCaseDescription}\r\n              value={caseDescription}\r\n                            />\r\n                        )}\r\n                        name=\"casedesc\"\r\n                    />\r\n                </View>\r\n                <Button\r\n                    style={{\r\n                        width: \"70%\",\r\n                        marginTop: 20,\r\n                        padding: 5,\r\n                        alignSelf: \"center\",\r\n                        left: 10,\r\n                    }}\r\n                    mode=\"contained\"\r\n                    onPress={addCitation}\r\n                    color=\"#244e78\"\r\n                >\r\n                    Save Changes\r\n                </Button>\r\n            </View>\r\n        </ScrollView>\r\n    );\r\n};\r\n\r\nexport default AddCitation;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}