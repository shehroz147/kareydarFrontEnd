{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect, Image } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport PixelImage from \"../common/PixelImage\";\nimport { fontPixel, heightPixel, widthPixel, pixelSizeHorizontal, pixelSizeVertical } from \"../../lib/style/adjust\";\nimport { useStyles } from \"../../lib/style/useStyle\";\nimport SpermChart from \"./SpermChart\";\nimport auth from \"../../lib/api/auth\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar DashboardScore = function DashboardScore() {\n  var commonStyle = useStyles();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      blawgs = _useState2[0],\n      setBlawgs = _useState2[1];\n\n  var getBlawgs = function _callee() {\n    var response;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(auth.post('blawgs/viewBlawgs'));\n\n          case 2:\n            response = _context.sent;\n            setBlawgs(response.data);\n            console.log(response.data);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    getBlawgs();\n  }, []);\n  return _jsxs(View, {\n    style: _objectSpread({\n      backgroundColor: '#29406C',\n      marginTop: heightPixel(20),\n      paddingVertical: heightPixel(16),\n      paddingHorizontal: widthPixel(20),\n      marginBottom: 60\n    }, Platform.select({\n      ios: {\n        shadowColor: 'rgba(0, 0, 0, 0.2)',\n        shadowOffset: {\n          width: 0,\n          height: 100\n        },\n        shadowOpacity: 0.57,\n        shadowRadius: 15.19\n      },\n      android: {\n        elevation: 5\n      }\n    })),\n    children: [_jsx(View, {\n      children: _jsx(Text, {\n        style: {\n          textAlign: 'center',\n          color: '#FFFFFF',\n          fontSize: fontPixel(22),\n          fontWeight: 'bold',\n          textTransform: 'uppercase'\n        },\n        children: \"Blawgs\"\n      })\n    }), _jsx(View, {\n      style: {\n        borderColor: 'white',\n        borderWidth: 2,\n        borderRadius: 10,\n        margin: 10,\n        height: '100%'\n      },\n      children: blawgs.map(function (data, index) {\n        _jsxs(View, {\n          style: {\n            display: 'flex',\n            justifyContent: 'space-between'\n          },\n          children: [_jsx(Image, {\n            source: {\n              uri: data == null ? void 0 : data.imageUrl\n            },\n            style: {\n              width: 50,\n              height: 50\n            }\n          }), _jsx(View, {\n            style: {\n              flex: 1\n            },\n            children: _jsx(Text, {\n              style: {\n                color: 'white',\n                fontSize: fontPixel(11),\n                fontWeight: '500',\n                textTransform: 'uppercase',\n                letterSpacing: pixelSizeHorizontal(2),\n                position: 'absolute',\n                left: 10,\n                marginTop: 60\n              },\n              children: data == null ? void 0 : data.title\n            })\n          })]\n        }, index);\n      })\n    })]\n  });\n};\n\nexport default DashboardScore;","map":{"version":3,"names":["React","useState","useEffect","Image","PixelImage","fontPixel","heightPixel","widthPixel","pixelSizeHorizontal","pixelSizeVertical","useStyles","SpermChart","auth","DashboardScore","commonStyle","blawgs","setBlawgs","getBlawgs","post","response","data","console","log","backgroundColor","marginTop","paddingVertical","paddingHorizontal","marginBottom","Platform","select","ios","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","android","elevation","textAlign","color","fontSize","fontWeight","textTransform","borderColor","borderWidth","borderRadius","margin","map","index","display","justifyContent","uri","imageUrl","flex","letterSpacing","position","left","title"],"sources":["C:/Users/hahah/Desktop/att/attornea-lawyer/src/Components/home/DashboardScore.js"],"sourcesContent":["import React, { useState, useEffect, Image } from 'react';\r\nimport { View, Text, Pressable, ScrollView, Platform } from 'react-native';\r\nimport PixelImage from '../common/PixelImage';\r\nimport { fontPixel, heightPixel, widthPixel, pixelSizeHorizontal, pixelSizeVertical } from '../../lib/style/adjust';\r\nimport { useStyles } from '../../lib/style/useStyle';\r\n// import Hormone from './Hormone';\r\n// import MainChart from './MainChart';\r\nimport SpermChart from './SpermChart';\r\nimport auth from '../../lib/api/auth';\r\n\r\n\r\nconst DashboardScore = () => {\r\n\r\n    const commonStyle = useStyles();\r\n    const [blawgs, setBlawgs] = useState([]);\r\n\r\n\r\n    const getBlawgs = async () => {\r\n        const response = await auth.post('blawgs/viewBlawgs');\r\n        setBlawgs(response.data);\r\n        console.log(response.data);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getBlawgs()\r\n    }, []);\r\n    return (\r\n        <View\r\n            style={{\r\n                backgroundColor: '#29406C',\r\n                marginTop: heightPixel(20),\r\n                paddingVertical: heightPixel(16),\r\n                paddingHorizontal: widthPixel(20),\r\n                marginBottom: 60,\r\n                ...Platform.select({\r\n                    ios: {\r\n                        shadowColor: 'rgba(0, 0, 0, 0.2)',\r\n                        shadowOffset: {\r\n                            width: 0,\r\n                            height: 100,\r\n                        },\r\n                        shadowOpacity: 0.57,\r\n                        shadowRadius: 15.19,\r\n                    },\r\n                    android: {\r\n                        elevation: 5,\r\n                    },\r\n                }),\r\n            }}>\r\n            <View>\r\n                <Text\r\n                    style={\r\n                        {\r\n                            textAlign: 'center',\r\n                            color: '#FFFFFF',\r\n                            fontSize: fontPixel(22),\r\n                            fontWeight: 'bold',\r\n                            textTransform: 'uppercase',\r\n                        }\r\n                    }>\r\n                    Blawgs\r\n                </Text>\r\n            </View>\r\n\r\n            <View style={\r\n                {\r\n                    borderColor: 'white',\r\n                    borderWidth: 2,\r\n                    borderRadius: 10,\r\n                    margin: 10,\r\n                    height: '100%'\r\n                }\r\n            }>\r\n                {blawgs.map((data, index) => {\r\n                    <View key={index} style={{\r\n                        display: 'flex',\r\n                        justifyContent: 'space-between'\r\n                    }}>\r\n                        <Image\r\n                            source={{ uri: data?.imageUrl }}\r\n                            style={{ width: 50, height: 50 }}\r\n                        />\r\n\r\n                        <View style={{\r\n                            flex: 1,\r\n                        }}>\r\n                            <Text\r\n                                style={\r\n\r\n                                    {\r\n                                        color: 'white',\r\n                                        fontSize: fontPixel(11),\r\n                                        fontWeight: '500',\r\n                                        textTransform: 'uppercase',\r\n                                        letterSpacing: pixelSizeHorizontal(2),\r\n                                        position: 'absolute',\r\n                                        left: 10,\r\n                                        marginTop: 60\r\n                                    }\r\n                                }>\r\n                                {data?.title}\r\n                            </Text>\r\n                        </View>\r\n                    </View>\r\n\r\n                })}\r\n            </View>\r\n        </View>\r\n    );\r\n};\r\n\r\nexport default DashboardScore;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}