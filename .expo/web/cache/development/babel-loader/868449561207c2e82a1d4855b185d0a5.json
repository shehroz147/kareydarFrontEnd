{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { heightPixel, widthPixel } from \"../../lib/style/adjust\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction TabBar(_ref) {\n  var state = _ref.state,\n      descriptors = _ref.descriptors,\n      navigation = _ref.navigation;\n  return _jsx(View, {\n    style: _objectSpread({\n      flexDirection: 'row',\n      height: heightPixel(80),\n      backgroundColor: '#29406C'\n    }, Platform.select({\n      ios: {\n        shadowColor: 'rgba(0, 0, 0, 0.1)',\n        shadowOffset: {\n          width: 0,\n          height: -15\n        },\n        shadowOpacity: 0.8,\n        shadowRadius: 10\n      },\n      android: {\n        elevation: 5\n      }\n    })),\n    children: state.routes.map(function (route, index) {\n      var isFocused = state.index === index;\n\n      var onPress = function onPress() {\n        var event = navigation.emit({\n          type: 'tabPress',\n          target: route.key,\n          canPreventDefault: true\n        });\n\n        if (!isFocused && !event.defaultPrevented) {\n          navigation.navigate({\n            name: route.name,\n            merge: true\n          });\n        }\n      };\n\n      var icon;\n\n      if (route.name === 'Home') {\n        icon = require(\"../../../assets/profile.png\");\n      } else if (route.name === 'Profile') {\n        icon = require(\"../../../assets/home.png\");\n      }\n\n      if (index === 1) {\n        return _jsx(View, {\n          style: {\n            flex: 2,\n            flexDirection: 'row'\n          },\n          children: _jsxs(Pressable, {\n            style: {\n              flex: 1,\n              alignItems: 'center'\n            },\n            onPress: onPress,\n            children: [_jsx(View, {\n              style: {\n                backgroundColor: isFocused ? '#FFFFFF' : '#29406C',\n                width: widthPixel(50),\n                height: heightPixel(8),\n                marginBottom: heightPixel(10),\n                borderRadius: 2\n              }\n            }), _jsx(Image, {\n              style: {\n                width: widthPixel(28),\n                height: widthPixel(28),\n                tintColor: isFocused ? '#FFFFFF' : '#FFFFFF'\n              },\n              source: icon\n            })]\n          })\n        }, index);\n      } else {\n        return _jsxs(Pressable, {\n          style: {\n            flex: 1,\n            alignItems: 'center'\n          },\n          onPress: onPress,\n          children: [_jsx(View, {\n            style: {\n              backgroundColor: isFocused ? '#FFFFFF' : '#29406C',\n              width: widthPixel(50),\n              height: heightPixel(8),\n              marginBottom: heightPixel(10),\n              borderRadius: 2\n            }\n          }), _jsx(Image, {\n            style: {\n              width: widthPixel(28),\n              height: widthPixel(28),\n              tintColor: isFocused ? '#FFFFFF' : '#FFFFFF'\n            },\n            source: icon\n          })]\n        }, index);\n      }\n    })\n  });\n}\n\nexport default TabBar;","map":{"version":3,"names":["React","heightPixel","widthPixel","TabBar","state","descriptors","navigation","flexDirection","height","backgroundColor","Platform","select","ios","shadowColor","shadowOffset","width","shadowOpacity","shadowRadius","android","elevation","routes","map","route","index","isFocused","onPress","event","emit","type","target","key","canPreventDefault","defaultPrevented","navigate","name","merge","icon","require","flex","alignItems","marginBottom","borderRadius","tintColor"],"sources":["C:/Users/hahah/Desktop/att/attornea-lawyer/src/Components/navigators/TabBar.js"],"sourcesContent":["import React from 'react';\r\nimport { View, Pressable, Image, Platform } from 'react-native';\r\nimport { heightPixel, widthPixel } from '../../lib/style/adjust';\r\n\r\nfunction TabBar({ state, descriptors, navigation }) {\r\n    return (\r\n        <View\r\n            style={{\r\n                flexDirection: 'row',\r\n                height: heightPixel(80),\r\n                backgroundColor: '#29406C',\r\n                ...Platform.select({\r\n                    ios: {\r\n                        shadowColor: 'rgba(0, 0, 0, 0.1)',\r\n                        shadowOffset: {\r\n                            width: 0,\r\n                            height: -15,\r\n                        },\r\n                        shadowOpacity: 0.8,\r\n                        shadowRadius: 10,\r\n                    },\r\n                    android: {\r\n                        elevation: 5,\r\n                    },\r\n                }),\r\n            }}>\r\n            {state.routes.map((route, index) => {\r\n                const isFocused = state.index === index;\r\n\r\n                const onPress = () => {\r\n                    const event = navigation.emit({\r\n                        type: 'tabPress',\r\n                        target: route.key,\r\n                        canPreventDefault: true,\r\n                    });\r\n\r\n                    if (!isFocused && !event.defaultPrevented) {\r\n                        // The `merge: true` option makes sure that the params inside the tab screen are preserved\r\n                        navigation.navigate({ name: route.name, merge: true });\r\n                    }\r\n                };\r\n\r\n                var icon;\r\n                if (route.name === 'Home') {\r\n                    icon = require('../../../assets/profile.png');\r\n                } else if (route.name === 'Profile') {\r\n                    icon = require('../../../assets/home.png');\r\n                    // } else if (route.name === 'Chart') {\r\n                    // icon = require('../../../assets/home.png');\r\n                    // } else if (route.name === 'Profile') {\r\n                    // icon = require('../../../assets/home.png');\r\n                }\r\n\r\n                if (index === 1) {\r\n                    return (\r\n                        <View style={{ flex: 2, flexDirection: 'row' }} key={index}>\r\n                            <Pressable\r\n                                style={{ flex: 1, alignItems: 'center' }}\r\n                                onPress={onPress}>\r\n                                <View\r\n                                    style={{\r\n                                        backgroundColor: isFocused ? '#FFFFFF' : '#29406C',\r\n                                        width: widthPixel(50),\r\n                                        height: heightPixel(8),\r\n                                        marginBottom: heightPixel(10),\r\n                                        borderRadius: 2,\r\n                                    }}\r\n                                />\r\n                                <Image\r\n                                    style={{\r\n                                        width: widthPixel(28),\r\n                                        height: widthPixel(28),\r\n                                        tintColor: isFocused ? '#FFFFFF' : '#FFFFFF',\r\n                                    }}\r\n                                    source={icon}\r\n                                />\r\n                            </Pressable>\r\n\r\n                        </View>\r\n                    );\r\n                } else {\r\n                    return (\r\n                        <Pressable\r\n                            key={index}\r\n                            style={{ flex: 1, alignItems: 'center' }}\r\n                            onPress={onPress}>\r\n                            <View\r\n                                style={{\r\n                                    backgroundColor: isFocused ? '#FFFFFF' : '#29406C',\r\n                                    width: widthPixel(50),\r\n                                    height: heightPixel(8),\r\n                                    marginBottom: heightPixel(10),\r\n                                    borderRadius: 2,\r\n                                }}\r\n                            />\r\n                            <Image\r\n                                style={{\r\n                                    width: widthPixel(28),\r\n                                    height: widthPixel(28),\r\n                                    tintColor: isFocused ? '#FFFFFF' : '#FFFFFF',\r\n                                }}\r\n                                source={icon}\r\n                            />\r\n                        </Pressable>\r\n                    );\r\n                }\r\n            })}\r\n        </View>\r\n    );\r\n}\r\n\r\nexport default TabBar;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}