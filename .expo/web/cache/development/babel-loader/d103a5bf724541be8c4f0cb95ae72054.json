{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect, Component } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { TouchableOpacityBase } from \"react-native-web/dist/index\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { fontPixel, heightPixel, pixelSizeHorizontal, pixelSizeVertical, widthPixel, PixelImage } from \"../../lib/style/adjust\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport { useStyles } from \"../../lib/style/useStyle\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { defaultLogin } from \"../../Components/store/features/userSlice\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport AntDesign from \"@expo/vector-icons/AntDesign\";\nimport SelectDropdown from \"react-native-select-dropdown\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nAntDesign.loadFont();\nimport { IconFill, IconOutline } from \"@ant-design/icons-react-native\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport auth from \"../../lib/api/auth\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar askQuestion = function askQuestion() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      description = _useState2[0],\n      setDescription = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      province = _useState4[0],\n      setProvince = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      city = _useState6[0],\n      setCity = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      areaOfLaw = _useState8[0],\n      setAreaOfLaw = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      title = _useState10[0],\n      setTitle = _useState10[1];\n\n  var _useState11 = useState(\"\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      role = _useState12[0],\n      setRole = _useState12[1];\n\n  var countries = [\"User\", \"Lawyer\", \"Student\"];\n\n  var _useState13 = useState(\"\"),\n      _useState14 = _slicedToArray(_useState13, 2),\n      userId = _useState14[0],\n      setUserId = _useState14[1];\n\n  var _useState15 = useState(null),\n      _useState16 = _slicedToArray(_useState15, 2),\n      userInfo = _useState16[0],\n      setUserInfo = _useState16[1];\n\n  var _useState17 = useState(true),\n      _useState18 = _slicedToArray(_useState17, 2),\n      gettingLoginStatus = _useState18[0],\n      setGettingLoginStatus = _useState18[1];\n\n  useEffect(function () {}, []);\n\n  var askQuestion = function _callee() {\n    var _id, id, data, response;\n\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"userId\"));\n\n          case 2:\n            _id = _context.sent;\n            id = JSON.parse(_id);\n            data = {\n              province: province,\n              city: city,\n              areaOfLaw: areaOfLaw,\n              title: title,\n              description: description,\n              id: id\n            };\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(auth.post(\"user/postQuestion\", data));\n\n          case 7:\n            response = _context.sent;\n            console.log(response);\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var _React$useState = React.useState(\"\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      error = _React$useState2[0],\n      setError = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      toggleCheckBox = _React$useState4[0],\n      setToggleCheckBox = _React$useState4[1];\n\n  var commonStyle = useStyles();\n  var dispatch = useDispatch();\n  var authStatus;\n  React.useEffect(function () {\n    if (authStatus === \"login_failed\") {\n      setError(\"username or password is wrong\");\n    }\n  }, [authStatus, error]);\n\n  var _useForm = useForm({\n    defaultValues: {\n      province: \"\",\n      city: \"\",\n      areaOfLaw: \"\",\n      title: \"\",\n      description: \"\"\n    },\n    mode: \"onBlur\"\n  }),\n      control = _useForm.control,\n      handleSubmit = _useForm.handleSubmit;\n\n  var onSubmit = function onSubmit(data) {\n    setError(\"\");\n    console.log(data);\n    askQuestion();\n  };\n\n  var onErrors = function onErrors(err) {\n    console.log(err);\n\n    if (err.email) {\n      setError(err.email.message);\n      return;\n    }\n\n    if (err.password) {\n      setError(err.password.message);\n      return;\n    }\n  };\n\n  var displayIcon = function displayIcon() {\n    return _jsx(PixelImage, {\n      imageSource: require(\"../../../assets/dropdown.png\"),\n      imageWidth: 20,\n      secondStyle: {\n        marginRight: widthPixel(20)\n      }\n    });\n  };\n\n  return _jsxs(View, {\n    style: {\n      alignItems: \"center\",\n      padding: 20,\n      backgroundColor: \"#FFFFFF\"\n    },\n    children: [_jsx(Text, {\n      style: {\n        textAlign: \"center\",\n        fontSize: 25,\n        fontWeight: \"800\",\n        color: \"#29406C\"\n      },\n      children: \"Ask A Question\"\n    }), _jsxs(View, {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"space-between\",\n        width: \"100%\",\n        alignItems: \"center\"\n      },\n      children: [_jsx(SelectDropdown, {\n        data: countries,\n        onSelect: function onSelect(selectedItem, index) {\n          setProvince(selectedItem);\n        },\n        buttonStyle: {\n          margin: 10,\n          borderRadius: 36\n        },\n        defaultButtonText: \"Province\",\n        buttonTextAfterSelection: function buttonTextAfterSelection(selectedItem, index) {\n          return selectedItem;\n        },\n        rowTextForSelection: function rowTextForSelection(item, index) {\n          return item;\n        }\n      }), _jsx(SelectDropdown, {\n        data: countries,\n        onSelect: function onSelect(selectedItem, index) {\n          setCity(selectedItem);\n        },\n        buttonStyle: {\n          margin: 10,\n          borderRadius: 36\n        },\n        defaultButtonText: \"City\",\n        buttonTextAfterSelection: function buttonTextAfterSelection(selectedItem, index) {\n          return selectedItem;\n        },\n        rowTextForSelection: function rowTextForSelection(item, index) {\n          return item;\n        }\n      }), _jsx(SelectDropdown, {\n        data: countries,\n        onSelect: function onSelect(selectedItem, index) {\n          setAreaOfLaw(selectedItem);\n        },\n        buttonStyle: {\n          margin: 10,\n          borderRadius: 36\n        },\n        defaultButtonText: \"Area Of Law\",\n        buttonTextAfterSelection: function buttonTextAfterSelection(selectedItem, index) {\n          return selectedItem;\n        },\n        rowTextForSelection: function rowTextForSelection(item, index) {\n          return item;\n        }\n      })]\n    }), _jsx(Controller, {\n      control: control,\n      render: function render(_ref) {\n        var _ref$field = _ref.field,\n            onChange = _ref$field.onChange,\n            onBlur = _ref$field.onBlur,\n            value = _ref$field.value;\n        return _jsx(TextInput, {\n          style: commonStyle.input,\n          placeholderTextColor: \"#000000\",\n          autoCapitalize: \"none\",\n          autoCompleteType: \"email\",\n          autoCorrect: false,\n          keyboardType: \"email-address\",\n          onBlur: onBlur,\n          onChangeText: setTitle,\n          returnKeyType: \"next\",\n          placeholder: \"Title\",\n          value: title\n        });\n      },\n      name: \"title\"\n    }), _jsx(TextInput, {\n      style: commonStyle.input,\n      multiline: true,\n      numberOfLines: 4,\n      placeholder: \"Description\",\n      onChangeText: setDescription,\n      value: description\n    }), _jsx(Pressable, {\n      style: _objectSpread({\n        marginHorizontal: 20,\n        width: \"100%\",\n        height: heightPixel(63),\n        borderRadius: heightPixel(31),\n        marginTop: pixelSizeVertical(20)\n      }, Platform.select({\n        ios: {\n          shadowColor: \"rgba(0, 0, 0, 0.25)\",\n          shadowOffset: {\n            width: 0,\n            height: 15\n          },\n          shadowOpacity: 0.6,\n          shadowRadius: 5\n        },\n        android: {\n          backgroundColor: \"#EEEEEE\",\n          elevation: 30\n        }\n      })),\n      onPress: handleSubmit(onSubmit, onErrors),\n      children: _jsx(LinearGradient, {\n        style: {\n          flex: 1,\n          width: \"50%\",\n          height: \"100%\",\n          borderRadius: heightPixel(31),\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          alignSelf: \"center\"\n        },\n        colors: [\"#29406C\", \"#49494B\"],\n        children: _jsx(Text, {\n          style: [commonStyle.rubik, {\n            color: \"#FFFFFF\",\n            fontSize: fontPixel(20),\n            fontWeight: \"500\",\n            letterSpacing: 1\n          }],\n          children: \"Submit\"\n        })\n      })\n    })]\n  });\n};\n\nexport default askQuestion;","map":{"version":3,"names":["React","useState","useEffect","Component","TouchableOpacityBase","fontPixel","heightPixel","pixelSizeHorizontal","pixelSizeVertical","widthPixel","PixelImage","useForm","Controller","useStyles","useDispatch","useSelector","defaultLogin","LinearGradient","AntDesign","SelectDropdown","AsyncStorage","loadFont","IconFill","IconOutline","NavigationContainer","auth","askQuestion","description","setDescription","province","setProvince","city","setCity","areaOfLaw","setAreaOfLaw","title","setTitle","role","setRole","countries","userId","setUserId","userInfo","setUserInfo","gettingLoginStatus","setGettingLoginStatus","getItem","_id","id","JSON","parse","data","post","response","console","log","error","setError","toggleCheckBox","setToggleCheckBox","commonStyle","dispatch","authStatus","defaultValues","mode","control","handleSubmit","onSubmit","onErrors","err","email","message","password","displayIcon","require","marginRight","alignItems","padding","backgroundColor","textAlign","fontSize","fontWeight","color","display","flexDirection","justifyContent","width","selectedItem","index","margin","borderRadius","item","field","onChange","onBlur","value","input","marginHorizontal","height","marginTop","Platform","select","ios","shadowColor","shadowOffset","shadowOpacity","shadowRadius","android","elevation","flex","alignSelf","rubik","letterSpacing"],"sources":["C:/Users/hahah/Desktop/att/attornea-lawyer/src/Screens/askQuestion/askQuestion.js"],"sourcesContent":["import React, { useState, useEffect, Component } from \"react\";\r\nimport {\r\n  Text,\r\n  View,\r\n  TextInput,\r\n  Pressable,\r\n  Platform,\r\n  TouchableOpacityBase,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\nimport {\r\n  fontPixel,\r\n  heightPixel,\r\n  pixelSizeHorizontal,\r\n  pixelSizeVertical,\r\n  widthPixel,\r\n  PixelImage,\r\n} from \"../../lib/style/adjust\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { useStyles } from \"../../lib/style/useStyle\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { defaultLogin } from \"../../Components/store/features/userSlice\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport AntDesign from \"react-native-vector-icons/AntDesign\";\r\nimport SelectDropdown from \"react-native-select-dropdown\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\n\r\nAntDesign.loadFont();\r\nimport { IconFill, IconOutline } from \"@ant-design/icons-react-native\";\r\n// import {\r\n//     GoogleSignin,\r\n//     GoogleSigninButton,\r\n//     statusCodes,\r\n// } from 'react-native-google-signin';\r\n\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport auth from \"../../lib/api/auth\";\r\nconst askQuestion = () => {\r\n  const [description, setDescription] = useState(\"\");\r\n  const [province, setProvince] = useState(\"\");\r\n  const [city, setCity] = useState(\"\");\r\n  const [areaOfLaw, setAreaOfLaw] = useState(\"\");\r\n  const [title, setTitle] = useState(\"\");\r\n  const [role, setRole] = useState(\"\");\r\n  const countries = [\"User\", \"Lawyer\", \"Student\"];\r\n  const [userId, setUserId] = useState(\"\");\r\n  const [userInfo, setUserInfo] = useState(null);\r\n  const [gettingLoginStatus, setGettingLoginStatus] = useState(true);\r\n  useEffect(() => {\r\n    // GoogleSignin.configure({\r\n    //     scopes: ['https://www.googleapis.com/auth/drive.readonly'],\r\n    //     webClientId: 'AIzaSyCyGKTv08DGfYhGXTZwdANZZWOXyI6ZRRM',\r\n    // });\r\n    // _isSignedIn();\r\n  }, []);\r\n\r\n  // const _isSignedIn = async () => {\r\n  //     const isSignedIn = await GoogleSignin.isSignedIn();\r\n  //     if (isSignedIn) {\r\n  //         alert('User is already signed in');\r\n  //         // Set User Info if user is already signed in\r\n  //         _getCurrentUserInfo();\r\n  //     } else {\r\n  //         console.log('Please Login');\r\n  //     }\r\n  //     setGettingLoginStatus(false);\r\n  // };\r\n\r\n  // const _getCurrentUserInfo = async () => {\r\n  //     try {\r\n  //         let info = await GoogleSignin.signInSilently();\r\n  //         console.log('User Info --> ', info);\r\n  //         setUserInfo(info);\r\n  //     } catch (error) {\r\n  //         if (error.code === statusCodes.SIGN_IN_REQUIRED) {\r\n  //             alert('User has not signed in yet');\r\n  //             console.log('User has not signed in yet');\r\n  //         } else {\r\n  //             alert(\"Something went wrong. Unable to get user's info\");\r\n  //             console.log(\"Something went wrong. Unable to get user's info\");\r\n  //         }\r\n  //     }\r\n  // };\r\n\r\n  const askQuestion = async () => {\r\n    let _id = await AsyncStorage.getItem(\"userId\");\r\n    let id = JSON.parse(_id);\r\n\r\n    const data = {\r\n      province: province,\r\n      city: city,\r\n      areaOfLaw: areaOfLaw,\r\n      title: title,\r\n      description: description,\r\n      id: id,\r\n    };\r\n    const response = await auth.post(\"user/postQuestion\", data);\r\n    console.log(response);\r\n  };\r\n\r\n  // const _signIn = async () => {\r\n  //     // It will prompt google Signin Widget\r\n  //     try {\r\n  //         await GoogleSignin.hasPlayServices({\r\n  //             // Check if device has Google Play Services installed\r\n  //             // Always resolves to true on iOS\r\n  //             showPlayServicesUpdateDialog: true,\r\n  //         });\r\n  //         const userInfo = await GoogleSignin.signIn();\r\n  //         console.log('User Info --> ', userInfo);\r\n  //         setUserInfo(userInfo);\r\n  //     } catch (error) {\r\n  //         console.log('Message', JSON.stringify(error));\r\n  //         if (error.code === statusCodes.SIGN_IN_CANCELLED) {\r\n  //             alert('User Cancelled the Login Flow');\r\n  //         } else if (error.code === statusCodes.IN_PROGRESS) {\r\n  //             alert('Signing In');\r\n  //         } else if (error.code === statusCodes.PLAY_SERVICES_NOT_AVAILABLE) {\r\n  //             alert('Play Services Not Available or Outdated');\r\n  //         } else {\r\n  //             alert(error.message);\r\n  //         }\r\n  //     }\r\n  // };\r\n\r\n  // const _signOut = async () => {\r\n  //     setGettingLoginStatus(true);\r\n  //     // Remove user session from the device.\r\n  //     try {\r\n  //         await GoogleSignin.revokeAccess();\r\n  //         await GoogleSignin.signOut();\r\n  //         // Removing user Info\r\n  //         setUserInfo(null);\r\n  //     } catch (error) {\r\n  //         console.error(error);\r\n  //     }\r\n  //     setGettingLoginStatus(false);\r\n  // };\r\n\r\n  const [error, setError] = React.useState(\"\");\r\n  const [toggleCheckBox, setToggleCheckBox] = React.useState(false);\r\n\r\n  const commonStyle = useStyles();\r\n  // const { authStatus } = useSelector(state => state.user);\r\n  const dispatch = useDispatch();\r\n  let authStatus;\r\n  React.useEffect(() => {\r\n    if (authStatus === \"login_failed\") {\r\n      setError(\"username or password is wrong\");\r\n    }\r\n  }, [authStatus, error]);\r\n\r\n  const { control, handleSubmit } = useForm({\r\n    defaultValues: {\r\n      province: \"\",\r\n      city: \"\",\r\n      areaOfLaw: \"\",\r\n      title: \"\",\r\n      description: \"\",\r\n    },\r\n    mode: \"onBlur\",\r\n  });\r\n  const onSubmit = (data) => {\r\n    setError(\"\");\r\n    console.log(data);\r\n\r\n    askQuestion();\r\n  };\r\n  const onErrors = (err) => {\r\n    console.log(err);\r\n    if (err.email) {\r\n      setError(err.email.message);\r\n      return;\r\n    }\r\n    if (err.password) {\r\n      setError(err.password.message);\r\n      return;\r\n    }\r\n  };\r\n\r\n  const displayIcon = () => {\r\n    return (\r\n      <PixelImage\r\n        imageSource={require(\"../../../assets/dropdown.png\")}\r\n        imageWidth={20}\r\n        secondStyle={{\r\n          marginRight: widthPixel(20),\r\n        }}\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    // <WebView\r\n    //     source={{\r\n    //         uri: 'https://attornea.com/mobile-signin'\r\n    //     }}\r\n    // />\r\n    <View\r\n      style={{ alignItems: \"center\", padding: 20, backgroundColor: \"#FFFFFF\" }}\r\n    >\r\n      <Text\r\n        style={{\r\n          textAlign: \"center\",\r\n          fontSize: 25,\r\n          fontWeight: \"800\",\r\n          color: \"#29406C\",\r\n        }}\r\n      >\r\n        Ask A Question\r\n      </Text>\r\n      <View\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          justifyContent: \"space-between\",\r\n          width: \"100%\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <SelectDropdown\r\n          data={countries}\r\n          onSelect={(selectedItem, index) => {\r\n            setProvince(selectedItem);\r\n          }}\r\n          buttonStyle={{\r\n            margin: 10,\r\n            borderRadius: 36,\r\n          }}\r\n          defaultButtonText={\"Province\"}\r\n          // renderDropdownIcon={displayIcon}\r\n          // dropdownIconPosition={'right'}\r\n          buttonTextAfterSelection={(selectedItem, index) => {\r\n            // text represented after item is selected\r\n            // if data array is an array of objects then return selectedItem.property to render after item is selected\r\n            return selectedItem;\r\n          }}\r\n          rowTextForSelection={(item, index) => {\r\n            // text represented for each item in dropdown\r\n            // if data array is an array of objects then return item.property to represent item in dropdown\r\n            return item;\r\n          }}\r\n        />\r\n        <SelectDropdown\r\n          data={countries}\r\n          onSelect={(selectedItem, index) => {\r\n            setCity(selectedItem);\r\n          }}\r\n          buttonStyle={{\r\n            margin: 10,\r\n            borderRadius: 36,\r\n          }}\r\n          defaultButtonText={\"City\"}\r\n          // renderDropdownIcon={displayIcon}\r\n          // dropdownIconPosition={'right'}\r\n          buttonTextAfterSelection={(selectedItem, index) => {\r\n            // text represented after item is selected\r\n            // if data array is an array of objects then return selectedItem.property to render after item is selected\r\n            return selectedItem;\r\n          }}\r\n          rowTextForSelection={(item, index) => {\r\n            // text represented for each item in dropdown\r\n            // if data array is an array of objects then return item.property to represent item in dropdown\r\n            return item;\r\n          }}\r\n        />\r\n        <SelectDropdown\r\n          data={countries}\r\n          onSelect={(selectedItem, index) => {\r\n            setAreaOfLaw(selectedItem);\r\n          }}\r\n          buttonStyle={{\r\n            margin: 10,\r\n            borderRadius: 36,\r\n          }}\r\n          defaultButtonText={\"Area Of Law\"}\r\n          // renderDropdownIcon={displayIcon}\r\n          // dropdownIconPosition={'right'}\r\n          buttonTextAfterSelection={(selectedItem, index) => {\r\n            // text represented after item is selected\r\n            // if data array is an array of objects then return selectedItem.property to render after item is selected\r\n            return selectedItem;\r\n          }}\r\n          rowTextForSelection={(item, index) => {\r\n            // text represented for each item in dropdown\r\n            // if data array is an array of objects then return item.property to represent item in dropdown\r\n            return item;\r\n          }}\r\n        />\r\n      </View>\r\n      <Controller\r\n        control={control}\r\n        render={({ field: { onChange, onBlur, value } }) => (\r\n          <TextInput\r\n            style={commonStyle.input}\r\n            placeholderTextColor={\"#000000\"}\r\n            autoCapitalize=\"none\"\r\n            autoCompleteType=\"email\"\r\n            autoCorrect={false}\r\n            keyboardType=\"email-address\"\r\n            onBlur={onBlur}\r\n            onChangeText={setTitle}\r\n            returnKeyType=\"next\"\r\n            placeholder=\"Title\"\r\n            value={title}\r\n          />\r\n        )}\r\n        name=\"title\"\r\n      />\r\n\r\n      <TextInput\r\n        style={commonStyle.input}\r\n        multiline={true}\r\n        numberOfLines={4}\r\n        placeholder=\"Description\"\r\n        onChangeText={setDescription}\r\n        value={description}\r\n      />\r\n\r\n      <Pressable\r\n        style={{\r\n          marginHorizontal: 20,\r\n          width: \"100%\",\r\n          height: heightPixel(63),\r\n          borderRadius: heightPixel(31),\r\n          marginTop: pixelSizeVertical(20),\r\n          ...Platform.select({\r\n            ios: {\r\n              shadowColor: \"rgba(0, 0, 0, 0.25)\",\r\n              shadowOffset: {\r\n                width: 0,\r\n                height: 15,\r\n              },\r\n              shadowOpacity: 0.6,\r\n              shadowRadius: 5,\r\n            },\r\n            android: {\r\n              backgroundColor: \"#EEEEEE\",\r\n              elevation: 30,\r\n            },\r\n          }),\r\n        }}\r\n        onPress={handleSubmit(onSubmit, onErrors)}\r\n      >\r\n        <LinearGradient\r\n          style={{\r\n            flex: 1,\r\n            width: \"50%\",\r\n            height: \"100%\",\r\n            borderRadius: heightPixel(31),\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            alignSelf: \"center\",\r\n          }}\r\n          colors={[\"#29406C\", \"#49494B\"]}\r\n        >\r\n          <Text\r\n            style={[\r\n              commonStyle.rubik,\r\n              {\r\n                color: \"#FFFFFF\",\r\n                fontSize: fontPixel(20),\r\n                fontWeight: \"500\",\r\n                letterSpacing: 1,\r\n              },\r\n            ]}\r\n          >\r\n            Submit\r\n          </Text>\r\n        </LinearGradient>\r\n      </Pressable>\r\n      {/* <View style={{\r\n                justifyContent: 'space-evenly',\r\n                alignItems: 'center',\r\n                flexDirection: 'row',\r\n                width: '65%'\r\n            }}>\r\n                <TouchableOpacity>\r\n                    <IconFill name=\"facebook\"\r\n                        size={40}\r\n                        color={'#4267B2'} />\r\n                </TouchableOpacity>\r\n                <GoogleSigninButton\r\n                    style={{ width: 50, height: 48 }}\r\n                    size={GoogleSigninButton.Size.Wide}\r\n                    color={GoogleSigninButton.Color.Light}\r\n                    onPress={_signIn}\r\n                />\r\n\r\n\r\n\r\n            </View> */}\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default askQuestion;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}