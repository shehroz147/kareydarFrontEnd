{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport extractFill from \"./extractFill\";\nimport extractStroke from \"./extractStroke\";\nimport extractTransform, { props2transform } from \"./extractTransform\";\nimport extractClipPath from \"./extractClipPath\";\nimport extractResponder from \"./extractResponder\";\nimport extractOpacity from \"./extractOpacity\";\nimport urlRegex from \"./patternReg\";\nexport default function (prop, ref) {\n  var props = _objectSpread(_objectSpread({}, prop.style), prop);\n\n  var opacity = props.opacity,\n      onLayout = props.onLayout,\n      id = props.id,\n      clipPath = props.clipPath,\n      mask = props.mask;\n  var styleProperties = [];\n  var extractedProps = {\n    opacity: extractOpacity(opacity),\n    propList: styleProperties,\n    onLayout: onLayout\n  };\n\n  if (id) {\n    extractedProps.name = id;\n  }\n\n  if (clipPath) {\n    _extends(extractedProps, extractClipPath(props));\n  }\n\n  if (mask) {\n    var matched = mask.match(urlRegex);\n\n    if (matched) {\n      extractedProps.mask = matched[1];\n    } else {\n      console.warn('Invalid `mask` prop, expected a mask like `\"#id\"`, but got: \"' + mask + '\"');\n    }\n  }\n\n  _extends(extractedProps, extractStroke(props, styleProperties));\n\n  _extends(extractedProps, extractFill(props, styleProperties));\n\n  extractedProps.matrix = extractTransform(props);\n\n  _extends(extractedProps, props2transform(props));\n\n  _extends(extractedProps, extractResponder(props, ref));\n\n  return extractedProps;\n}","map":{"version":3,"names":["extractFill","extractStroke","extractTransform","props2transform","extractClipPath","extractResponder","extractOpacity","urlRegex","prop","ref","props","style","opacity","onLayout","id","clipPath","mask","styleProperties","extractedProps","propList","name","matched","match","console","warn","matrix"],"sources":["C:/Users/hahah/Desktop/att/attornea-lawyer/node_modules/react-native-svg/lib/extract/extractProps.js"],"sourcesContent":["import extractFill from \"./extractFill\";\nimport extractStroke from \"./extractStroke\";\nimport extractTransform, { props2transform } from \"./extractTransform\";\nimport extractClipPath from \"./extractClipPath\";\nimport extractResponder from \"./extractResponder\";\nimport extractOpacity from \"./extractOpacity\";\nimport urlRegex from \"./patternReg\";\n\nexport default function(prop, ref) {\n    const props = { ...prop.style, ...prop };\n    const { opacity, onLayout, id, clipPath, mask } = props;\n    const styleProperties = [];\n\n    const extractedProps = {\n        opacity: extractOpacity(opacity),\n        propList: styleProperties,\n        onLayout,\n    };\n\n    if (id) {\n        extractedProps.name = id;\n    }\n\n    if (clipPath) {\n        Object.assign(extractedProps, extractClipPath(props));\n    }\n\n    if (mask) {\n        const matched = mask.match(urlRegex);\n\n        if (matched) {\n            extractedProps.mask = matched[1];\n        } else {\n            console.warn(\n                'Invalid `mask` prop, expected a mask like `\"#id\"`, but got: \"' +\n                    mask +\n                    '\"',\n            );\n        }\n    }\n\n    Object.assign(extractedProps, extractStroke(props, styleProperties));\n    Object.assign(extractedProps, extractFill(props, styleProperties));\n\n    extractedProps.matrix = extractTransform(props);\n\n    Object.assign(extractedProps, props2transform(props));\n\n    Object.assign(extractedProps, extractResponder(props, ref));\n\n    return extractedProps;\n}\n"],"mappings":";;;;;;;AAAA,OAAOA,WAAP;AACA,OAAOC,aAAP;AACA,OAAOC,gBAAP,IAA2BC,eAA3B;AACA,OAAOC,eAAP;AACA,OAAOC,gBAAP;AACA,OAAOC,cAAP;AACA,OAAOC,QAAP;AAEA,eAAe,UAASC,IAAT,EAAeC,GAAf,EAAoB;EAC/B,IAAMC,KAAK,mCAAQF,IAAI,CAACG,KAAb,GAAuBH,IAAvB,CAAX;;EACA,IAAQI,OAAR,GAAkDF,KAAlD,CAAQE,OAAR;EAAA,IAAiBC,QAAjB,GAAkDH,KAAlD,CAAiBG,QAAjB;EAAA,IAA2BC,EAA3B,GAAkDJ,KAAlD,CAA2BI,EAA3B;EAAA,IAA+BC,QAA/B,GAAkDL,KAAlD,CAA+BK,QAA/B;EAAA,IAAyCC,IAAzC,GAAkDN,KAAlD,CAAyCM,IAAzC;EACA,IAAMC,eAAe,GAAG,EAAxB;EAEA,IAAMC,cAAc,GAAG;IACnBN,OAAO,EAAEN,cAAc,CAACM,OAAD,CADJ;IAEnBO,QAAQ,EAAEF,eAFS;IAGnBJ,QAAQ,EAARA;EAHmB,CAAvB;;EAMA,IAAIC,EAAJ,EAAQ;IACJI,cAAc,CAACE,IAAf,GAAsBN,EAAtB;EACH;;EAED,IAAIC,QAAJ,EAAc;IACV,SAAcG,cAAd,EAA8Bd,eAAe,CAACM,KAAD,CAA7C;EACH;;EAED,IAAIM,IAAJ,EAAU;IACN,IAAMK,OAAO,GAAGL,IAAI,CAACM,KAAL,CAAWf,QAAX,CAAhB;;IAEA,IAAIc,OAAJ,EAAa;MACTH,cAAc,CAACF,IAAf,GAAsBK,OAAO,CAAC,CAAD,CAA7B;IACH,CAFD,MAEO;MACHE,OAAO,CAACC,IAAR,CACI,kEACIR,IADJ,GAEI,GAHR;IAKH;EACJ;;EAED,SAAcE,cAAd,EAA8BjB,aAAa,CAACS,KAAD,EAAQO,eAAR,CAA3C;;EACA,SAAcC,cAAd,EAA8BlB,WAAW,CAACU,KAAD,EAAQO,eAAR,CAAzC;;EAEAC,cAAc,CAACO,MAAf,GAAwBvB,gBAAgB,CAACQ,KAAD,CAAxC;;EAEA,SAAcQ,cAAd,EAA8Bf,eAAe,CAACO,KAAD,CAA7C;;EAEA,SAAcQ,cAAd,EAA8Bb,gBAAgB,CAACK,KAAD,EAAQD,GAAR,CAA9C;;EAEA,OAAOS,cAAP;AACH"},"metadata":{},"sourceType":"module"}