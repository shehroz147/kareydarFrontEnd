{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { fetchPost, fetchUserDataById, onDefaultLogin, fetchUserData } from \"../../lib/api\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nexport var defaultLogin = createAsyncThunk('user/login', function _callee(params) {\n  var response, role, id;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(onDefaultLogin(params));\n\n        case 3:\n          response = _context.sent;\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"role\", JSON.stringify(response.role)));\n\n        case 6:\n          _context.next = 8;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem('role'));\n\n        case 8:\n          role = _context.sent;\n          console.log(role);\n          _context.next = 12;\n          return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"userId\", JSON.stringify(response._id)));\n\n        case 12:\n          _context.next = 14;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"userId\"));\n\n        case 14:\n          id = _context.sent;\n          console.log(\"userId:\", id);\n          return _context.abrupt(\"return\", {\n            response: response,\n            isSuccessed: true\n          });\n\n        case 19:\n          _context.prev = 19;\n          _context.t0 = _context[\"catch\"](0);\n          return _context.abrupt(\"return\", {\n            isSuccessed: false\n          });\n\n        case 22:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 19]], Promise);\n});\nexport var getUserData = createAsyncThunk('user/userData', function _callee2(params) {\n  var response;\n  return _regeneratorRuntime.async(function _callee2$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(fetchUserData(params));\n\n        case 3:\n          response = _context2.sent;\n          console.log(\"The response from backend is :\", response);\n          console.log(response._id);\n          setProfile(response);\n          return _context2.abrupt(\"return\", {\n            response: response\n          });\n\n        case 10:\n          _context2.prev = 10;\n          _context2.t0 = _context2[\"catch\"](0);\n          return _context2.abrupt(\"return\", {\n            isSuccessed: false\n          });\n\n        case 13:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[0, 10]], Promise);\n});\nexport var register = createAsyncThunk('user/register/', function _callee3(params) {\n  var response;\n  return _regeneratorRuntime.async(function _callee3$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return _regeneratorRuntime.awrap(fetchPost('register', params));\n\n        case 3:\n          response = _context3.sent;\n          return _context3.abrupt(\"return\", {\n            response: response,\n            isSuccessed: true\n          });\n\n        case 7:\n          _context3.prev = 7;\n          _context3.t0 = _context3[\"catch\"](0);\n          return _context3.abrupt(\"return\", {\n            isSuccessed: false\n          });\n\n        case 10:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, [[0, 7]], Promise);\n});\nexport var getUserById = createAsyncThunk('user/get_user_by_id', function _callee4(params) {\n  var response;\n  return _regeneratorRuntime.async(function _callee4$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return _regeneratorRuntime.awrap(fetchUserDataById(params));\n\n        case 2:\n          response = _context4.sent;\n          return _context4.abrupt(\"return\", response);\n\n        case 4:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, null, Promise);\n});\nexport var userSlice = createSlice({\n  name: 'user',\n  initialState: {\n    userInfo: null,\n    token: null,\n    isLoading: true,\n    isSignout: false,\n    havePlan: 'empty',\n    authStatus: 'idle'\n  },\n  reducers: {\n    signOut: function signOut(state) {\n      state.userInfo = null;\n      state.token = null;\n      state.isSignout = true;\n\n      try {\n        storage.delete('user.token');\n        storage.delete('user.id');\n      } catch (e) {\n        console.error('Error:', e);\n      }\n    },\n    setPlan: function setPlan(state, action) {\n      state.havePlan = action.payload;\n    }\n  },\n  extraReducers: function extraReducers(builder) {\n    builder.addCase(defaultLogin.pending, function (state) {\n      state.isLoading = true;\n      state.isSignout = false;\n    }).addCase(defaultLogin.fulfilled, function (state, action) {\n      if (!action.payload.isSuccessed) {\n        state.authStatus = 'login_failed';\n      } else {\n        state.havePlan = 'login';\n        state.isLoading = false;\n        state.token = action.payload.response.token;\n        state.userInfo = action.payload.response.user;\n\n        try {\n          storage.set('user.token', action.payload.response.token);\n          storage.set('user.id', action.payload.response.user._id);\n        } catch (e) {\n          console.error('Error:', e);\n        }\n      }\n    });\n    builder.addCase(getUserById.fulfilled, function (state, action) {\n      state.havePlan = 'login';\n      state.isLoading = false;\n      state.token = action.payload.token;\n      state.userInfo = action.payload.user;\n    });\n    builder.addCase(register.pending, function (state) {\n      state.isLoading = true;\n      state.isSignout = false;\n    }).addCase(register.fulfilled, function (state, action) {\n      if (!action.payload.isSuccessed) {\n        state.authStatus = 'register_failed';\n      } else {\n        state.isLoading = false;\n        state.token = 'fake_token';\n      }\n    });\n  }\n});\nvar _userSlice$actions = userSlice.actions,\n    signOut = _userSlice$actions.signOut,\n    setPlan = _userSlice$actions.setPlan;\nexport { signOut, setPlan };\nexport default userSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","fetchPost","fetchUserDataById","onDefaultLogin","fetchUserData","AsyncStorage","defaultLogin","params","response","setItem","JSON","stringify","role","getItem","console","log","_id","id","isSuccessed","getUserData","setProfile","register","getUserById","userSlice","name","initialState","userInfo","token","isLoading","isSignout","havePlan","authStatus","reducers","signOut","state","storage","delete","e","error","setPlan","action","payload","extraReducers","builder","addCase","pending","fulfilled","user","set","actions","reducer"],"sources":["C:/Users/hahah/Desktop/att/attornea-lawyer/src/Components/store/features/userSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport { fetchPost, fetchUserDataById, onDefaultLogin, fetchUserData } from '../../lib/api';\r\n// import { MMKV } from 'react-native-mmkv';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\n\r\n// const storage = new MMKV();\r\nexport const defaultLogin = createAsyncThunk(\r\n    'user/login',\r\n    async params => {\r\n        try {\r\n            const response = await onDefaultLogin(params);\r\n            // console.log(\"The response from backend is :\", response);\r\n            // console.log(response._id);\r\n            await AsyncStorage.setItem(\"role\", JSON.stringify(response.role));\r\n            const role = await AsyncStorage.getItem('role');\r\n            console.log(role);\r\n            await AsyncStorage.setItem(\"userId\", JSON.stringify(response._id));\r\n            const id = await AsyncStorage.getItem(\"userId\");\r\n            console.log(\"userId:\", id);\r\n            // console.log(await AsyncStorage.getItem('role'))\r\n            return { response, isSuccessed: true };\r\n        } catch (e) {\r\n            //save error\r\n            return { isSuccessed: false };\r\n        }\r\n    },\r\n);\r\n\r\nexport const getUserData = createAsyncThunk(\r\n    'user/userData',\r\n    async params => {\r\n        try {\r\n            const response = await fetchUserData(params);\r\n            console.log(\"The response from backend is :\", response);\r\n            console.log(response._id);\r\n            setProfile(response);\r\n            return { response };\r\n        } catch (e) {\r\n            //save error\r\n            return { isSuccessed: false };\r\n        }\r\n    },\r\n);\r\n\r\nexport const register = createAsyncThunk('user/register/', async params => {\r\n    try {\r\n        const response = await fetchPost('register', params);\r\n        return { response, isSuccessed: true };\r\n    } catch (e) {\r\n        //save error\r\n        return { isSuccessed: false };\r\n    }\r\n});\r\nexport const getUserById = createAsyncThunk(\r\n    'user/get_user_by_id',\r\n    async params => {\r\n        const response = await fetchUserDataById(params);\r\n        return response;\r\n    },\r\n);\r\n\r\nexport const userSlice = createSlice({\r\n    name: 'user',\r\n    initialState: {\r\n        userInfo: null,\r\n        token: null,\r\n        isLoading: true,\r\n        isSignout: false,\r\n        havePlan: 'empty',\r\n        authStatus: 'idle',\r\n    },\r\n    reducers: {\r\n        signOut: state => {\r\n            state.userInfo = null;\r\n            state.token = null;\r\n            state.isSignout = true;\r\n\r\n            try {\r\n                storage.delete('user.token');\r\n                storage.delete('user.id');\r\n            } catch (e) {\r\n                console.error('Error:', e);\r\n            }\r\n        },\r\n        setPlan: (state, action) => {\r\n            state.havePlan = action.payload;\r\n        },\r\n    },\r\n    extraReducers: builder => {\r\n        builder\r\n            .addCase(defaultLogin.pending, state => {\r\n                state.isLoading = true;\r\n                state.isSignout = false;\r\n            })\r\n            .addCase(defaultLogin.fulfilled, (state, action) => {\r\n                if (!action.payload.isSuccessed) {\r\n                    state.authStatus = 'login_failed';\r\n                } else {\r\n                    state.havePlan = 'login';\r\n                    state.isLoading = false;\r\n                    state.token = action.payload.response.token;\r\n                    state.userInfo = action.payload.response.user;\r\n\r\n                    try {\r\n                        storage.set('user.token', action.payload.response.token);\r\n                        storage.set('user.id', action.payload.response.user._id);\r\n                    } catch (e) {\r\n                        console.error('Error:', e);\r\n                    }\r\n                }\r\n            });\r\n        builder.addCase(getUserById.fulfilled, (state, action) => {\r\n            state.havePlan = 'login';\r\n            state.isLoading = false;\r\n            state.token = action.payload.token;\r\n            state.userInfo = action.payload.user;\r\n        });\r\n        builder\r\n            .addCase(register.pending, state => {\r\n                state.isLoading = true;\r\n                state.isSignout = false;\r\n            })\r\n            .addCase(register.fulfilled, (state, action) => {\r\n                if (!action.payload.isSuccessed) {\r\n                    state.authStatus = 'register_failed';\r\n                } else {\r\n                    state.isLoading = false;\r\n                    state.token = 'fake_token';\r\n                }\r\n            });\r\n    },\r\n});\r\n\r\nexport const { signOut, setPlan } = userSlice.actions;\r\n\r\nexport default userSlice.reducer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}