{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { fontPixel, heightPixel, pixelSizeHorizontal, pixelSizeVertical, widthPixel } from \"../../lib/style/adjust\";\nimport { useStyles } from \"../../lib/style/useStyle\";\nimport { useSelector } from 'react-redux';\nimport { useForm, Controller } from 'react-hook-form';\nimport { useNavigation } from '@react-navigation/native';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport auth from \"../../lib/api/auth\";\nimport PixelImage from \"../common/PixelImage\";\nimport api from \"../../lib/api/auth\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar SignUp = function SignUp() {\n  var countries = [\"User\", \"Lawyer\", \"Student\"];\n\n  var _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      error = _React$useState2[0],\n      setError = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      toggleCheckBox = _React$useState4[0],\n      setToggleCheckBox = _React$useState4[1];\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      open = _useState2[0],\n      setOpen = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      value = _useState4[0],\n      setValue = _useState4[1];\n\n  var _useState5 = useState([{\n    label: 'Apple',\n    value: 'apple'\n  }, {\n    label: 'Banana',\n    value: 'banana'\n  }]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      items = _useState6[0],\n      setItems = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      role = _useState8[0],\n      setRole = _useState8[1];\n\n  var commonStyle = useStyles();\n  var authStatus;\n  var navigation = useNavigation();\n  React.useEffect(function () {\n    if (authStatus === 'register_failed') {\n      setError('register failed!');\n    }\n  }, [authStatus]);\n\n  var _useForm = useForm({\n    defaultValues: {\n      role: '',\n      firstName: '',\n      lastName: '',\n      password: '',\n      email: ''\n    }\n  }),\n      control = _useForm.control,\n      handleSubmit = _useForm.handleSubmit;\n\n  var onSubmit = function _callee(data) {\n    var passwordRegex, emailRegex, response;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setError('');\n            passwordRegex = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{8,}$/;\n            emailRegex = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n\n            if (passwordRegex.test(data.password)) {\n              _context.next = 6;\n              break;\n            }\n\n            setError('Password must contain 1 Capital,1 Number and Minimum 8 characters');\n            return _context.abrupt(\"return\");\n\n          case 6:\n            if (emailRegex.test(data.email)) {\n              _context.next = 9;\n              break;\n            }\n\n            setError('Invalid email format');\n            return _context.abrupt(\"return\");\n\n          case 9:\n            if (toggleCheckBox) {\n              _context.next = 12;\n              break;\n            }\n\n            setError('Please read and agree to terms and conditions');\n            return _context.abrupt(\"return\");\n\n          case 12:\n            _context.next = 14;\n            return _regeneratorRuntime.awrap(auth.post('/user/register', data));\n\n          case 14:\n            response = _context.sent;\n            console.log(response);\n            navigation.navigate('Auth');\n\n          case 17:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var onErrors = function onErrors(err) {\n    console.log(err);\n\n    if (err.name) {\n      setError(err.name.message);\n      return;\n    }\n\n    if (err.password) {\n      setError(err.password.message);\n      return;\n    }\n\n    if (err.confirmPassword) {\n      setError(err.confirmPassword.message);\n      return;\n    }\n\n    if (err.email) {\n      setError(err.email.message);\n      return;\n    }\n  };\n\n  var displayIcon = function displayIcon() {\n    return _jsx(PixelImage, {\n      imageSource: require(\"../../../assets/dropdown.png\"),\n      imageWidth: 20,\n      secondStyle: {\n        marginRight: widthPixel(20)\n      }\n    });\n  };\n\n  return _jsxs(View, {\n    style: {\n      alignItems: 'center',\n      width: '90%',\n      alignSelf: 'center',\n      height: '80%'\n    },\n    children: [_jsx(Controller, {\n      control: control,\n      rules: {\n        required: 'Full Name can not be blank'\n      },\n      render: function render(_ref) {\n        var _ref$field = _ref.field,\n            onChange = _ref$field.onChange,\n            onBlur = _ref$field.onBlur,\n            value = _ref$field.value;\n        return _jsx(TextInput, {\n          style: commonStyle.input,\n          placeholderTextColor: '#AAAAAA',\n          autoCapitalize: \"none\",\n          autoCorrect: false,\n          onBlur: onBlur,\n          onChangeText: onChange,\n          returnKeyType: \"next\",\n          placeholder: \"First Name\",\n          value: value\n        });\n      },\n      name: \"firstName\"\n    }), _jsx(Controller, {\n      control: control,\n      render: function render(_ref2) {\n        var _ref2$field = _ref2.field,\n            onChange = _ref2$field.onChange,\n            onBlur = _ref2$field.onBlur,\n            value = _ref2$field.value;\n        return _jsx(TextInput, {\n          style: commonStyle.input,\n          placeholderTextColor: '#AAAAAA',\n          autoCapitalize: \"none\",\n          autoCorrect: false,\n          onChangeText: onChange,\n          returnKeyType: \"next\",\n          placeholder: \"Last Name\",\n          secureTextEntry: true,\n          value: value\n        });\n      },\n      name: \"lastName\"\n    }), _jsx(Controller, {\n      control: control,\n      render: function render(_ref3) {\n        var _ref3$field = _ref3.field,\n            onChange = _ref3$field.onChange,\n            onBlur = _ref3$field.onBlur,\n            value = _ref3$field.value;\n        return _jsx(TextInput, {\n          style: commonStyle.input,\n          placeholderTextColor: '#AAAAAA',\n          autoCapitalize: \"none\",\n          autoCompleteType: \"password\",\n          autoCorrect: false,\n          onBlur: onBlur,\n          onChangeText: onChange,\n          returnKeyType: \"next\",\n          placeholder: \"Password\",\n          secureTextEntry: true,\n          onSubmitEditing: handleSubmit(onSubmit, onErrors),\n          value: value\n        });\n      },\n      name: \"password\"\n    }), _jsx(Controller, {\n      control: control,\n      rules: {\n        required: 'Email is required!'\n      },\n      render: function render(_ref4) {\n        var _ref4$field = _ref4.field,\n            onChange = _ref4$field.onChange,\n            onBlur = _ref4$field.onBlur,\n            value = _ref4$field.value;\n        return _jsx(TextInput, {\n          style: commonStyle.input,\n          placeholderTextColor: '#AAAAAA',\n          autoCapitalize: \"none\",\n          autoCompleteType: \"email\",\n          autoCorrect: false,\n          keyboardType: \"email-address\",\n          onBlur: onBlur,\n          onChangeText: onChange,\n          returnKeyType: \"next\",\n          placeholder: \"Email\",\n          value: value\n        });\n      },\n      name: \"email\"\n    }), _jsx(Text, {\n      style: {\n        textAlign: 'center',\n        color: 'red',\n        fontWeight: '500',\n        fontSize: fontPixel(14),\n        marginTop: pixelSizeVertical(16)\n      },\n      children: error\n    }), _jsx(View, {\n      style: {\n        flexDirection: 'row',\n        alignItems: 'center'\n      },\n      children: _jsxs(Text, {\n        style: {\n          flex: 1,\n          color: '#222222',\n          fontWeight: '500',\n          fontSize: fontPixel(13),\n          letterSpacing: pixelSizeHorizontal(1)\n        },\n        children: [\"Agree to our \\xA0\", _jsx(Text, {\n          style: {\n            flex: 1,\n            color: '#941DE1',\n            fontWeight: '500',\n            fontSize: fontPixel(13),\n            letterSpacing: pixelSizeHorizontal(1),\n            textDecorationLine: 'underline',\n            textDecorationStyle: 'solid'\n          },\n          children: \"Terms & Conditions\"\n        })]\n      })\n    }), _jsx(Pressable, {\n      style: _objectSpread({\n        marginHorizontal: 20,\n        width: '50%',\n        height: heightPixel(50),\n        borderRadius: heightPixel(31),\n        marginTop: pixelSizeVertical(20)\n      }, Platform.select({\n        ios: {\n          shadowColor: 'rgba(0, 0, 0, 0.25)',\n          shadowOffset: {\n            width: 0,\n            height: 15\n          },\n          shadowOpacity: 0.6,\n          shadowRadius: 5\n        },\n        android: {\n          backgroundColor: '#EEEEEE',\n          elevation: 30\n        }\n      })),\n      onPress: handleSubmit(onSubmit),\n      children: _jsx(LinearGradient, {\n        style: {\n          flex: 1,\n          width: '100%',\n          height: '100%',\n          borderRadius: heightPixel(31),\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        colors: ['#29406C', '#49494B'],\n        children: _jsx(Text, {\n          style: {\n            color: '#FFFFFF',\n            fontSize: fontPixel(14),\n            fontWeight: '500',\n            letterSpacing: 1\n          },\n          children: \"Sign Up\"\n        })\n      })\n    })]\n  });\n};\n\nexport default SignUp;","map":{"version":3,"names":["React","useState","fontPixel","heightPixel","pixelSizeHorizontal","pixelSizeVertical","widthPixel","useStyles","useSelector","useForm","Controller","useNavigation","LinearGradient","auth","PixelImage","api","SignUp","countries","error","setError","toggleCheckBox","setToggleCheckBox","open","setOpen","value","setValue","label","items","setItems","role","setRole","commonStyle","authStatus","navigation","useEffect","defaultValues","firstName","lastName","password","email","control","handleSubmit","onSubmit","data","passwordRegex","emailRegex","test","post","response","console","log","navigate","onErrors","err","name","message","confirmPassword","displayIcon","require","marginRight","alignItems","width","alignSelf","height","required","field","onChange","onBlur","input","textAlign","color","fontWeight","fontSize","marginTop","flexDirection","flex","letterSpacing","textDecorationLine","textDecorationStyle","marginHorizontal","borderRadius","Platform","select","ios","shadowColor","shadowOffset","shadowOpacity","shadowRadius","android","backgroundColor","elevation","justifyContent"],"sources":["C:/Users/hahah/Desktop/att/attornea-lawyer/src/Components/auth/SignUp.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Text, View, TextInput, Pressable, Platform } from 'react-native';\r\n// import CheckBox from '@react-native-community/checkbox';\r\nimport {\r\n    fontPixel,\r\n    heightPixel,\r\n    pixelSizeHorizontal,\r\n    pixelSizeVertical,\r\n    widthPixel,\r\n} from '../../lib/style/adjust';\r\nimport { useStyles } from '../../lib/style/useStyle';\r\nimport { useSelector } from 'react-redux';\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\n// import {AccessToken, Settings, LoginManager} from 'react-native-fbsdk-next';\r\nimport auth from '../../lib/api/auth';\r\nimport PixelImage from '../common/PixelImage';\r\n\r\nimport api from '../../lib/api/auth';\r\n\r\n// import SelectDropdown from 'react-native-select-dropdown'\r\n\r\n\r\n\r\n\r\nconst SignUp = () => {\r\n    const countries = [\"User\", \"Lawyer\", \"Student\"]\r\n    const [error, setError] = React.useState('');\r\n    const [toggleCheckBox, setToggleCheckBox] = React.useState(false);\r\n    const [open, setOpen] = useState(false);\r\n    const [value, setValue] = useState(null);\r\n    const [items, setItems] = useState([\r\n        { label: 'Apple', value: 'apple' },\r\n        { label: 'Banana', value: 'banana' }\r\n    ]);\r\n    const [role, setRole] = useState('');\r\n    const commonStyle = useStyles();\r\n    // const { authStatus } = useSelector(state => state.user);\r\n    let authStatus;\r\n    const navigation = useNavigation();\r\n\r\n    React.useEffect(() => {\r\n        if (authStatus === 'register_failed') {\r\n            setError('register failed!');\r\n        }\r\n    }, [authStatus]);\r\n\r\n    const { control, handleSubmit } = useForm({\r\n        defaultValues: {\r\n            role: '',\r\n            firstName: '',\r\n            lastName: '',\r\n            password: '',\r\n            email: '',\r\n        },\r\n        // mode: 'onBlur',\r\n    });\r\n    const onSubmit = async (data) => {\r\n        setError('');\r\n        const passwordRegex = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{8,}$/;\r\n        const emailRegex =\r\n            /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\r\n\r\n        if (!passwordRegex.test(data.password)) {\r\n            setError(\r\n                'Password must contain 1 Capital,1 Number and Minimum 8 characters',\r\n            );\r\n            return;\r\n        }\r\n        // if (data.password !== data.confirmPassword) {\r\n        //     setError('Passwords must match');\r\n        //     return;\r\n        // }\r\n\r\n        if (!emailRegex.test(data.email)) {\r\n            setError('Invalid email format');\r\n            return;\r\n        }\r\n\r\n        if (!toggleCheckBox) {\r\n            setError('Please read and agree to terms and conditions');\r\n            return;\r\n        }\r\n\r\n        // const data = {\r\n        //     role: role,\r\n        //     firstName: data.firstName,\r\n        //     lastName: data.lastName,\r\n        //     email: data.email,\r\n        //     password: data.password,\r\n        // };\r\n        // console.log(data)\r\n        const response = await auth.post('/user/register', data)\r\n        console.log(response);\r\n        // const signUpUser = async () => {\r\n        // console.log(auth);\r\n\r\n        // }\r\n        navigation.navigate('Auth');\r\n    };\r\n    const onErrors = err => {\r\n        console.log(err);\r\n        if (err.name) {\r\n            setError(err.name.message);\r\n            return;\r\n        }\r\n        if (err.password) {\r\n            setError(err.password.message);\r\n            return;\r\n        }\r\n        if (err.confirmPassword) {\r\n            setError(err.confirmPassword.message);\r\n            return;\r\n        }\r\n        if (err.email) {\r\n            setError(err.email.message);\r\n            return;\r\n        }\r\n    };\r\n\r\n    const displayIcon = () => {\r\n        return (\r\n            <PixelImage\r\n                imageSource={require('../../../assets/dropdown.png')}\r\n                imageWidth={20}\r\n                secondStyle={{\r\n                    marginRight: widthPixel(20),\r\n                }}\r\n            />\r\n        )\r\n    }\r\n\r\n    return (\r\n\r\n        <View style={{ alignItems: 'center', width: '90%', alignSelf: 'center', height: '80%' }}>\r\n\r\n            {/* <SelectDropdown\r\n                data={countries}\r\n                onSelect={(selectedItem, index) => {\r\n                    setRole(selectedItem)\r\n                }}\r\n                buttonStyle={{\r\n                    margin: 10,\r\n                    borderRadius: 36,\r\n                }}\r\n                dropdownStyle={{\r\n\r\n                }}\r\n                defaultButtonText={'Role'}\r\n                renderDropdownIcon={displayIcon}\r\n                dropdownIconPosition={'right'}\r\n                buttonTextAfterSelection={(selectedItem, index) => {\r\n                    // text represented after item is selected\r\n                    // if data array is an array of objects then return selectedItem.property to render after item is selected\r\n                    return selectedItem\r\n                }}\r\n                rowTextForSelection={(item, index) => {\r\n                    // text represented for each item in dropdown\r\n                    // if data array is an array of objects then return item.property to represent item in dropdown\r\n                    return item\r\n                }}\r\n            /> */}\r\n\r\n\r\n            <Controller\r\n                control={control}\r\n                rules={{ required: 'Full Name can not be blank' }}\r\n                render={({ field: { onChange, onBlur, value } }) => (\r\n                    <TextInput\r\n                        style={commonStyle.input}\r\n                        placeholderTextColor={'#AAAAAA'}\r\n                        autoCapitalize=\"none\"\r\n                        autoCorrect={false}\r\n                        onBlur={onBlur}\r\n                        onChangeText={onChange}\r\n                        returnKeyType=\"next\"\r\n                        placeholder=\"First Name\"\r\n                        value={value}\r\n                    />\r\n                )}\r\n                name=\"firstName\"\r\n            />\r\n\r\n            <Controller\r\n                control={control}\r\n\r\n                render={({ field: { onChange, onBlur, value } }) => (\r\n                    <TextInput\r\n                        style={commonStyle.input}\r\n                        placeholderTextColor={'#AAAAAA'}\r\n                        autoCapitalize=\"none\"\r\n                        autoCorrect={false}\r\n                        onChangeText={onChange}\r\n                        returnKeyType=\"next\"\r\n                        placeholder=\"Last Name\"\r\n                        secureTextEntry\r\n                        value={value}\r\n                    />\r\n                )}\r\n                name=\"lastName\"\r\n            />\r\n            <Controller\r\n                control={control}\r\n\r\n                render={({ field: { onChange, onBlur, value } }) => (\r\n                    <TextInput\r\n                        style={commonStyle.input}\r\n                        placeholderTextColor={'#AAAAAA'}\r\n                        autoCapitalize=\"none\"\r\n                        autoCompleteType=\"password\"\r\n                        autoCorrect={false}\r\n                        onBlur={onBlur}\r\n                        onChangeText={onChange}\r\n                        returnKeyType=\"next\"\r\n                        placeholder=\"Password\"\r\n                        secureTextEntry\r\n                        onSubmitEditing={handleSubmit(onSubmit, onErrors)}\r\n                        value={value}\r\n                    />\r\n                )}\r\n                name=\"password\"\r\n            />\r\n            <Controller\r\n                control={control}\r\n                rules={{ required: 'Email is required!' }}\r\n                render={({ field: { onChange, onBlur, value } }) => (\r\n                    <TextInput\r\n                        style={commonStyle.input}\r\n                        placeholderTextColor={'#AAAAAA'}\r\n                        autoCapitalize=\"none\"\r\n                        autoCompleteType=\"email\"\r\n                        autoCorrect={false}\r\n                        keyboardType=\"email-address\"\r\n                        onBlur={onBlur}\r\n                        onChangeText={onChange}\r\n                        returnKeyType=\"next\"\r\n                        placeholder=\"Email\"\r\n                        value={value}\r\n                    />\r\n                )}\r\n                name=\"email\"\r\n            />\r\n\r\n            <Text\r\n                style={\r\n                    {\r\n                        textAlign: 'center',\r\n                        color: 'red',\r\n                        fontWeight: '500',\r\n                        fontSize: fontPixel(14),\r\n                        marginTop: pixelSizeVertical(16),\r\n                    }\r\n                }>\r\n                {error}\r\n            </Text>\r\n            <View\r\n                style={{\r\n                    flexDirection: 'row',\r\n                    alignItems: 'center',\r\n                }}>\r\n                {/* <CheckBox\r\n                    value={toggleCheckBox}\r\n                    tintColor={'gray'}\r\n                    onCheckColor={'#941DE1'}\r\n                    lineWidth={1}\r\n                    style={{\r\n                        width: widthPixel(25),\r\n                        height: widthPixel(25),\r\n                        marginHorizontal: pixelSizeHorizontal(10),\r\n                    }}\r\n                    onValueChange={newValue => setToggleCheckBox(newValue)}\r\n                /> */}\r\n                <Text\r\n                    style={\r\n                        {\r\n                            flex: 1,\r\n                            color: '#222222',\r\n                            fontWeight: '500',\r\n                            fontSize: fontPixel(13),\r\n                            letterSpacing: pixelSizeHorizontal(1),\r\n                        }\r\n                    }>\r\n                    Agree to our &nbsp;\r\n                    <Text\r\n                        style={\r\n                            {\r\n                                flex: 1,\r\n                                color: '#941DE1',\r\n                                fontWeight: '500',\r\n                                fontSize: fontPixel(13),\r\n                                letterSpacing: pixelSizeHorizontal(1),\r\n                                textDecorationLine: 'underline',\r\n                                textDecorationStyle: 'solid',\r\n                            }\r\n                        }>\r\n                        Terms & Conditions\r\n                    </Text>\r\n                </Text>\r\n            </View>\r\n\r\n            <Pressable\r\n                style={{\r\n                    marginHorizontal: 20,\r\n                    width: '50%',\r\n                    height: heightPixel(50),\r\n                    borderRadius: heightPixel(31),\r\n                    marginTop: pixelSizeVertical(20),\r\n                    ...Platform.select({\r\n                        ios: {\r\n                            shadowColor: 'rgba(0, 0, 0, 0.25)',\r\n                            shadowOffset: {\r\n                                width: 0,\r\n                                height: 15,\r\n                            },\r\n                            shadowOpacity: 0.6,\r\n                            shadowRadius: 5,\r\n                        },\r\n                        android: {\r\n                            backgroundColor: '#EEEEEE',\r\n                            elevation: 30,\r\n                        },\r\n                    }),\r\n                }}\r\n                onPress={handleSubmit(onSubmit)}>\r\n                <LinearGradient\r\n                    style={{\r\n                        flex: 1,\r\n                        width: '100%',\r\n                        height: '100%',\r\n                        borderRadius: heightPixel(31),\r\n                        alignItems: 'center',\r\n                        justifyContent: 'center',\r\n                    }}\r\n                    colors={['#29406C', '#49494B']}>\r\n                    <Text\r\n                        style={\r\n                            {\r\n                                color: '#FFFFFF',\r\n                                fontSize: fontPixel(14),\r\n                                fontWeight: '500',\r\n                                letterSpacing: 1,\r\n                            }\r\n                        }>\r\n                        Sign Up\r\n                    </Text>\r\n                </LinearGradient>\r\n            </Pressable>\r\n        </View>\r\n    );\r\n};\r\n\r\nexport default SignUp;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}