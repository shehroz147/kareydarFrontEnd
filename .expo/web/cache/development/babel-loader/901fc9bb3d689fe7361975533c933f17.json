{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { fontPixel, heightPixel, pixelSizeVertical, widthPixel } from \"../../lib/style/adjust\";\nimport { SearchBar } from 'react-native-elements';\nimport { useStyles } from \"../../lib/style/useStyle\";\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\nimport MenuProfile from \"../../Components/home/MenuProfile\";\nimport MenuScore from \"../../Components/home/MenuScore\";\nimport MenuMessage from \"../../Components/home/MenuMessage\";\nimport MenuTask from \"../../Components/home/MenuTask\";\nimport DashboardScore from \"../../Components/home/DashboardScore\";\nimport DashboardHealthStatus from \"../../Components/home/DashboardHealthStatus\";\nimport FocusAwareStatusBar from \"../../Components/common/FocusAwareStatusBar\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { DrawerActions } from '@react-navigation/native';\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { getUserById } from \"../../Components/store/features/userSlice\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nvar Home = function Home(navigation) {\n  var getUserById = function _callee() {\n    var id;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('userId'));\n\n          case 2:\n            id = _context.sent;\n            console.log(JSON.parse(id));\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    getUserById();\n  }, []);\n\n  var _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      searchQuery = _React$useState2[0],\n      setSearchQuery = _React$useState2[1];\n\n  var onChangeSearch = function onChangeSearch(query) {\n    return setSearchQuery(query);\n  };\n\n  var _React$useState3 = React.useState(true),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      isMain = _React$useState4[0],\n      setIsMenu = _React$useState4[1];\n\n  var commonStyle = useStyles();\n  var insets = useSafeAreaInsets();\n  var dispatch = useDispatch();\n  return _jsx(_Fragment, {\n    children: _jsx(View, {\n      style: {\n        flex: 1,\n        backgroundColor: '#FFFFFF',\n        height: '100%'\n      },\n      children: _jsxs(ScrollView, {\n        style: {\n          marginTop: 10,\n          backgroundColor: '#FFFFFF',\n          flex: 1,\n          padding: 20,\n          height: '100%'\n        },\n        children: [_jsx(SearchBar, {\n          round: true,\n          searchIcon: false,\n          onChangeText: onChangeSearch,\n          placeholder: \"Search Lawyers...\",\n          value: searchQuery,\n          placeholderTextColor: '#FFFFFF'\n        }), _jsxs(View, {\n          style: {\n            flexDirection: 'row'\n          },\n          children: [_jsx(MenuScore, {}), _jsx(MenuMessage, {})]\n        }), _jsx(MenuTask, {})]\n      })\n    })\n  });\n};\n\nexport default Home;","map":{"version":3,"names":["React","useState","useEffect","fontPixel","heightPixel","pixelSizeVertical","widthPixel","SearchBar","useStyles","useSafeAreaInsets","MenuProfile","MenuScore","MenuMessage","MenuTask","DashboardScore","DashboardHealthStatus","FocusAwareStatusBar","useDispatch","useSelector","DrawerActions","AsyncStorage","getUserById","Home","navigation","getItem","id","console","log","JSON","parse","searchQuery","setSearchQuery","onChangeSearch","query","isMain","setIsMenu","commonStyle","insets","dispatch","flex","backgroundColor","height","marginTop","padding","flexDirection"],"sources":["C:/Users/hahah/Desktop/att/attornea-lawyer/src/Screens/home/Home.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { View, Text, Platform, Pressable, ScrollView, TouchableOpacity, ActivityIndicator } from 'react-native';\r\n// import PixelImage from '../../components/common/PixelImage';\r\n// import {\r\n//     GoogleSignin,\r\n//     GoogleSigninButton,\r\n//     statusCodes,\r\n// } from 'react-native-google-signin';\r\nimport {\r\n    fontPixel,\r\n    heightPixel,\r\n    pixelSizeVertical,\r\n    widthPixel,\r\n} from '../../lib/style/adjust';\r\n// import { Searchbar } from 'react-native-paper';\r\nimport { SearchBar } from 'react-native-elements';\r\nimport { useStyles } from '../../lib/style/useStyle';\r\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\r\nimport MenuProfile from '../../Components/home/MenuProfile';\r\nimport MenuScore from '../../Components/home/MenuScore';\r\nimport MenuMessage from '../../Components/home/MenuMessage';\r\nimport MenuTask from '../../Components/home/MenuTask';\r\nimport DashboardScore from '../../Components/home/DashboardScore';\r\nimport DashboardHealthStatus from '../../Components/home/DashboardHealthStatus';\r\nimport FocusAwareStatusBar from '../../Components/common/FocusAwareStatusBar';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { DrawerActions } from '@react-navigation/native';\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { getUserById } from '../../Components/store/features/userSlice';\r\n// AIzaSyCyGKTv08DGfYhGXTZwdANZZWOXyI6ZRRM\r\nconst Home = (navigation) => {\r\n\r\n    const getUserById = async () => {\r\n        let id = await AsyncStorage.getItem('userId')\r\n        console.log(JSON.parse(id));\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        getUserById();\r\n    }, []);\r\n\r\n    // const toggleDrawer=()=>{\r\n    //   props.toggleDrawer;\r\n    // }\r\n\r\n    const [searchQuery, setSearchQuery] = React.useState('');\r\n    const onChangeSearch = query => setSearchQuery(query);\r\n\r\n    const [isMain, setIsMenu] = React.useState(true);\r\n    const commonStyle = useStyles();\r\n    const insets = useSafeAreaInsets();\r\n    const dispatch = useDispatch();\r\n    return (\r\n        <>\r\n            <View\r\n                style={{\r\n                    flex: 1,\r\n                    backgroundColor: '#FFFFFF',\r\n                    height: '100%'\r\n                }}>\r\n\r\n                <ScrollView\r\n                    style={{\r\n                        marginTop: 10,\r\n                        backgroundColor: '#FFFFFF',\r\n                        flex: 1,\r\n                        padding: 20,\r\n                        height: '100%'\r\n                    }}>\r\n                    <SearchBar round\r\n                        searchIcon={false}\r\n                        onChangeText={onChangeSearch}\r\n                        placeholder=\"Search Lawyers...\"\r\n                        value={searchQuery}\r\n                        placeholderTextColor={'#FFFFFF'}\r\n\r\n                    />\r\n                    {/* <MenuProfile /> */}\r\n                    <View style={{ flexDirection: 'row', }}>\r\n                        <MenuScore />\r\n                        <MenuMessage />\r\n                    </View>\r\n                    <MenuTask />\r\n                    {/* <DashboardScore /> */}\r\n                </ScrollView>\r\n            </View>\r\n\r\n        </>\r\n\r\n    );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;;;;AAQA,SACIC,SADJ,EAEIC,WAFJ,EAGIC,iBAHJ,EAIIC,UAJJ;AAOA,SAASC,SAAT,QAA0B,uBAA1B;AACA,SAASC,SAAT;AACA,SAASC,iBAAT,QAAkC,gCAAlC;AACA,OAAOC,WAAP;AACA,OAAOC,SAAP;AACA,OAAOC,WAAP;AACA,OAAOC,QAAP;AACA,OAAOC,cAAP;AACA,OAAOC,qBAAP;AACA,OAAOC,mBAAP;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AACA,SAASC,WAAT;;;;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAACC,UAAD,EAAgB;EAEzB,IAAMF,WAAW,GAAG;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA,iCACDD,YAAY,CAACI,OAAb,CAAqB,QAArB,CADC;;UAAA;YACZC,EADY;YAEhBC,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,KAAL,CAAWJ,EAAX,CAAZ;;UAFgB;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAApB;;EAKAvB,SAAS,CAAC,YAAM;IAEZmB,WAAW;EACd,CAHQ,EAGN,EAHM,CAAT;;EASA,sBAAsCrB,KAAK,CAACC,QAAN,CAAe,EAAf,CAAtC;EAAA;EAAA,IAAO6B,WAAP;EAAA,IAAoBC,cAApB;;EACA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,KAAK;IAAA,OAAIF,cAAc,CAACE,KAAD,CAAlB;EAAA,CAA5B;;EAEA,uBAA4BjC,KAAK,CAACC,QAAN,CAAe,IAAf,CAA5B;EAAA;EAAA,IAAOiC,MAAP;EAAA,IAAeC,SAAf;;EACA,IAAMC,WAAW,GAAG5B,SAAS,EAA7B;EACA,IAAM6B,MAAM,GAAG5B,iBAAiB,EAAhC;EACA,IAAM6B,QAAQ,GAAGrB,WAAW,EAA5B;EACA,OACI;IAAA,UACI,KAAC,IAAD;MACI,KAAK,EAAE;QACHsB,IAAI,EAAE,CADH;QAEHC,eAAe,EAAE,SAFd;QAGHC,MAAM,EAAE;MAHL,CADX;MAAA,UAOI,MAAC,UAAD;QACI,KAAK,EAAE;UACHC,SAAS,EAAE,EADR;UAEHF,eAAe,EAAE,SAFd;UAGHD,IAAI,EAAE,CAHH;UAIHI,OAAO,EAAE,EAJN;UAKHF,MAAM,EAAE;QALL,CADX;QAAA,WAQI,KAAC,SAAD;UAAW,KAAK,MAAhB;UACI,UAAU,EAAE,KADhB;UAEI,YAAY,EAAET,cAFlB;UAGI,WAAW,EAAC,mBAHhB;UAII,KAAK,EAAEF,WAJX;UAKI,oBAAoB,EAAE;QAL1B,EARJ,EAiBI,MAAC,IAAD;UAAM,KAAK,EAAE;YAAEc,aAAa,EAAE;UAAjB,CAAb;UAAA,WACI,KAAC,SAAD,KADJ,EAEI,KAAC,WAAD,KAFJ;QAAA,EAjBJ,EAqBI,KAAC,QAAD,KArBJ;MAAA;IAPJ;EADJ,EADJ;AAsCH,CA7DD;;AA+DA,eAAetB,IAAf"},"metadata":{},"sourceType":"module"}