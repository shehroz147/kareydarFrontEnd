{"ast":null,"code":"import axios from 'axios';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport auth from \"./auth\";\nvar apiClient = axios.create({\n  baseURL: Platform.OS === 'android' ? 'https://cc09-103-151-43-109.ngrok.io/' : 'https://cc09-103-151-43-109.ngrok.io/',\n  headers: {\n    Accept: 'application/json',\n    'Content-Type': 'application/json; charset=utf-8'\n  }\n});\nexport function fetchUserData(params) {\n  return new Promise(function (resolve, reject) {\n    apiClient.post('user/userData', {\n      id: params.id\n    }).then(function (res) {\n      resolve(res.data);\n    }).catch(function (err) {\n      reject(err);\n    });\n  });\n}\nexport function fetchPost(url, params) {\n  return new Promise(function (resolve, reject) {\n    console.log(url, params);\n    apiClient.post(url, params).then(function (res) {\n      console.log('response data after post', res.data);\n      resolve(res.data);\n    }).catch(function (err) {\n      console.log('error after post', err, url);\n      reject(err);\n    });\n  });\n}\nexport function onDefaultLogin(params) {\n  console.log(params);\n  return new Promise(function (resolve, reject) {\n    apiClient.post('user/login', {\n      email: params.email,\n      password: params.password\n    }).then(function (res) {\n      resolve(res.data);\n    }).catch(function (err) {\n      console.log('login error', err);\n      reject(err);\n    });\n  });\n}\nexport function fetchUserDataById(params) {\n  return new Promise(function (resolve, reject) {\n    apiClient.get('get_user_by_id/' + params.id, {\n      headers: {\n        'auth-token': params.auth_token\n      }\n    }).then(function (res) {\n      resolve({\n        user: res.data,\n        token: params.auth_token\n      });\n    }).catch(function (err) {\n      console.log('error after post', err);\n      reject(err);\n    });\n  });\n}","map":{"version":3,"names":["axios","auth","apiClient","create","baseURL","Platform","OS","headers","Accept","fetchUserData","params","Promise","resolve","reject","post","id","then","res","data","catch","err","fetchPost","url","console","log","onDefaultLogin","email","password","fetchUserDataById","get","auth_token","user","token"],"sources":["C:/Users/hahah/Desktop/att/attornea-lawyer/src/Components/lib/api/index.js"],"sourcesContent":["import axios from 'axios';\r\nimport { Platform } from 'react-native';\r\nimport auth from './auth';\r\nconst apiClient = axios.create({\r\n    baseURL:\r\n        Platform.OS === 'android'\r\n            // ? 'http://192.168.1.5:4000/'\r\n            // : 'http://0.0.0.0:4000/',\r\n            ? 'https://cc09-103-151-43-109.ngrok.io/'\r\n            : 'https://cc09-103-151-43-109.ngrok.io/',\r\n    headers: {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json; charset=utf-8',\r\n    },\r\n});\r\n\r\nexport function fetchUserData(params) {\r\n    return new Promise((resolve, reject) => {\r\n        apiClient\r\n            .post('user/userData', {\r\n                id: params.id\r\n            })\r\n            .then(res => {\r\n                // console.log()\r\n                resolve(res.data)\r\n            })\r\n            .catch(err => {\r\n                reject(err);\r\n            });\r\n    });\r\n}\r\n\r\n\r\nexport function fetchPost(url, params) {\r\n    return new Promise((resolve, reject) => {\r\n        console.log(url, params);\r\n        apiClient\r\n            .post(url, params)\r\n            .then(res => {\r\n                console.log('response data after post', res.data);\r\n                resolve(res.data);\r\n            })\r\n            .catch(err => {\r\n                console.log('error after post', err, url);\r\n                reject(err);\r\n            });\r\n    });\r\n}\r\n\r\nexport function onDefaultLogin(params) {\r\n    console.log(params);\r\n    return new Promise((resolve, reject) => {\r\n        apiClient\r\n            .post('user/login', {\r\n                email: params.email,\r\n                password: params.password,\r\n            })\r\n            .then(res => {\r\n                // console.log('login res', res.data);\r\n                resolve(res.data);\r\n            })\r\n            .catch(err => {\r\n                console.log('login error', err);\r\n                reject(err);\r\n            });\r\n    });\r\n}\r\n\r\nexport function fetchUserDataById(params) {\r\n    return new Promise((resolve, reject) => {\r\n        apiClient\r\n            .get('get_user_by_id/' + params.id, {\r\n                headers: {\r\n                    'auth-token': params.auth_token,\r\n                },\r\n            })\r\n            .then(res => {\r\n                // console.log('response data after post', res.data);\r\n                resolve({ user: res.data, token: params.auth_token });\r\n            })\r\n            .catch(err => {\r\n                console.log('error after post', err);\r\n                reject(err);\r\n            });\r\n    });\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}