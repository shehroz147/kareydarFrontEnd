{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect, Image } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { fontPixel, heightPixel, pixelSizeHorizontal, widthPixel } from \"../../lib/style/adjust\";\nimport PixelImage from \"../common/PixelImage\";\nimport { useStyles } from \"../../lib/style/useStyle\";\nimport * as shape from 'd3-shape';\nimport auth from \"../../lib/api/auth\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar SpermChart = function SpermChart() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      blawgs = _useState2[0],\n      setBlawgs = _useState2[1];\n\n  var getBlawgs = function _callee() {\n    var response;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(auth.post('blawgs/viewBlawgs'));\n\n          case 2:\n            response = _context.sent;\n            setBlawgs(response.data);\n            console.log(response.data);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    getBlawgs();\n  }, []);\n  var commonStyle = useStyles();\n  var data = [50, 10, 40, 95, -4, -24, 85, 91, 35, 53, -53, 24, 50, -20, -80];\n  return _jsx(View, {\n    style: {\n      borderColor: 'white',\n      borderWidth: 2,\n      borderRadius: 10,\n      margin: 10\n    },\n    children: blawgs.map(function (data) {\n      _jsxs(View, {\n        children: [_jsx(View, {\n          style: {\n            flex: 1\n          },\n          children: _jsx(Image, {\n            source: {\n              uri: blawgs == null ? void 0 : blawgs.imageUrl\n            },\n            style: {\n              width: 120,\n              height: 120\n            }\n          })\n        }), _jsx(View, {\n          style: {\n            flex: 1\n          },\n          children: _jsx(Text, {\n            style: {\n              color: 'white',\n              fontSize: fontPixel(11),\n              fontWeight: '500',\n              textTransform: 'uppercase',\n              letterSpacing: pixelSizeHorizontal(2),\n              position: 'absolute',\n              left: 10,\n              marginTop: 60\n            },\n            children: blawgs == null ? void 0 : blawgs.title\n          })\n        })]\n      });\n    })\n  });\n};\n\nexport default SpermChart;","map":{"version":3,"names":["React","useState","useEffect","Image","LinearGradient","fontPixel","heightPixel","pixelSizeHorizontal","widthPixel","PixelImage","useStyles","shape","auth","SpermChart","blawgs","setBlawgs","getBlawgs","post","response","data","console","log","commonStyle","borderColor","borderWidth","borderRadius","margin","map","flex","uri","imageUrl","width","height","color","fontSize","fontWeight","textTransform","letterSpacing","position","left","marginTop","title"],"sources":["C:/Users/hahah/Desktop/att/attornea-lawyer/src/Components/home/SpermChart.js"],"sourcesContent":["import React, { useState, useEffect, Image } from 'react';\r\nimport { View, Text } from 'react-native';\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\nimport {\r\n    fontPixel,\r\n    heightPixel,\r\n    pixelSizeHorizontal,\r\n    widthPixel,\r\n} from '../../lib/style/adjust';\r\nimport PixelImage from '../common/PixelImage';\r\nimport { useStyles } from '../../lib/style/useStyle';\r\n// import { Path } from 'react-native-svg-charts';\r\nimport * as shape from 'd3-shape';\r\nimport auth from '../../lib/api/auth';\r\n\r\n\r\nconst SpermChart = () => {\r\n    const [blawgs, setBlawgs] = useState([]);\r\n\r\n\r\n    const getBlawgs = async () => {\r\n        const response = await auth.post('blawgs/viewBlawgs');\r\n        setBlawgs(response.data);\r\n        console.log(response.data);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getBlawgs()\r\n    }, []);\r\n\r\n\r\n    const commonStyle = useStyles();\r\n    const data = [50, 10, 40, 95, -4, -24, 85, 91, 35, 53, -53, 24, 50, -20, -80];\r\n\r\n    // const Shadow = ({ line }) => (\r\n    // <Path\r\n    //     key={'shadow'}\r\n    //     y={15}\r\n    //     d={line}\r\n    //     fill={'none'}\r\n    //     strokeWidth={4}\r\n    //     stroke={'rgba(0, 0, 0, 0.15)'}\r\n    // />\r\n    // );\r\n\r\n    return (\r\n        <View style={\r\n            {\r\n                borderColor: 'white',\r\n                borderWidth: 2,\r\n                borderRadius: 10,\r\n                margin: 10,\r\n            }\r\n        }>\r\n\r\n            {blawgs.map((data) => {\r\n                <View>\r\n                    <View style={{ flex: 1 }}>\r\n                        <Image\r\n                            source={{ uri: blawgs?.imageUrl }}\r\n                            style={{ width: 120, height: 120 }}\r\n                        />\r\n\r\n                    </View>\r\n                    <View style={{\r\n                        flex: 1,\r\n                    }}>\r\n                        <Text\r\n                            style={\r\n\r\n                                {\r\n                                    color: 'white',\r\n                                    fontSize: fontPixel(11),\r\n                                    fontWeight: '500',\r\n                                    textTransform: 'uppercase',\r\n                                    letterSpacing: pixelSizeHorizontal(2),\r\n                                    position: 'absolute',\r\n                                    left: 10,\r\n                                    marginTop: 60\r\n                                }\r\n                            }>\r\n                            {blawgs?.title}\r\n                        </Text>\r\n                    </View>\r\n                </View>\r\n\r\n            })}\r\n\r\n        </View>\r\n    );\r\n};\r\n\r\nexport default SpermChart;\r\n"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,KAArC,QAAkD,OAAlD;;;AAEA,SAASC,cAAT,QAA+B,sBAA/B;AACA,SACIC,SADJ,EAEIC,WAFJ,EAGIC,mBAHJ,EAIIC,UAJJ;AAMA,OAAOC,UAAP;AACA,SAASC,SAAT;AAEA,OAAO,KAAKC,KAAZ,MAAuB,UAAvB;AACA,OAAOC,IAAP;;;;AAGA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;EACrB,gBAA4BZ,QAAQ,CAAC,EAAD,CAApC;EAAA;EAAA,IAAOa,MAAP;EAAA,IAAeC,SAAf;;EAGA,IAAMC,SAAS,GAAG;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA,iCACSJ,IAAI,CAACK,IAAL,CAAU,mBAAV,CADT;;UAAA;YACRC,QADQ;YAEdH,SAAS,CAACG,QAAQ,CAACC,IAAV,CAAT;YACAC,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACC,IAArB;;UAHc;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAlB;;EAMAjB,SAAS,CAAC,YAAM;IACZc,SAAS;EACZ,CAFQ,EAEN,EAFM,CAAT;EAKA,IAAMM,WAAW,GAAGZ,SAAS,EAA7B;EACA,IAAMS,IAAI,GAAG,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,CAAC,CAAlB,EAAqB,CAAC,EAAtB,EAA0B,EAA1B,EAA8B,EAA9B,EAAkC,EAAlC,EAAsC,EAAtC,EAA0C,CAAC,EAA3C,EAA+C,EAA/C,EAAmD,EAAnD,EAAuD,CAAC,EAAxD,EAA4D,CAAC,EAA7D,CAAb;EAaA,OACI,KAAC,IAAD;IAAM,KAAK,EACP;MACII,WAAW,EAAE,OADjB;MAEIC,WAAW,EAAE,CAFjB;MAGIC,YAAY,EAAE,EAHlB;MAIIC,MAAM,EAAE;IAJZ,CADJ;IAAA,UASKZ,MAAM,CAACa,GAAP,CAAW,UAACR,IAAD,EAAU;MAClB,MAAC,IAAD;QAAA,WACI,KAAC,IAAD;UAAM,KAAK,EAAE;YAAES,IAAI,EAAE;UAAR,CAAb;UAAA,UACI,KAAC,KAAD;YACI,MAAM,EAAE;cAAEC,GAAG,EAAEf,MAAF,oBAAEA,MAAM,CAAEgB;YAAf,CADZ;YAEI,KAAK,EAAE;cAAEC,KAAK,EAAE,GAAT;cAAcC,MAAM,EAAE;YAAtB;UAFX;QADJ,EADJ,EAQI,KAAC,IAAD;UAAM,KAAK,EAAE;YACTJ,IAAI,EAAE;UADG,CAAb;UAAA,UAGI,KAAC,IAAD;YACI,KAAK,EAED;cACIK,KAAK,EAAE,OADX;cAEIC,QAAQ,EAAE7B,SAAS,CAAC,EAAD,CAFvB;cAGI8B,UAAU,EAAE,KAHhB;cAIIC,aAAa,EAAE,WAJnB;cAKIC,aAAa,EAAE9B,mBAAmB,CAAC,CAAD,CALtC;cAMI+B,QAAQ,EAAE,UANd;cAOIC,IAAI,EAAE,EAPV;cAQIC,SAAS,EAAE;YARf,CAHR;YAAA,UAcK1B,MAdL,oBAcKA,MAAM,CAAE2B;UAdb;QAHJ,EARJ;MAAA;IA8BH,CA/BA;EATL,EADJ;AA6CH,CA1ED;;AA4EA,eAAe5B,UAAf"},"metadata":{},"sourceType":"module"}